{"version":3,"sources":["components/Formik/DateField/index.tsx","components/Paper/index.tsx","components/Formik/ComboBoxField/index.tsx","components/Formik/InfoField/index.tsx","pages/app/Claims/ClaimDetails/tabs/JobInfo/renderField.tsx","components/FormikCustom/MoneyField/index.tsx","components/FormikCustom/RefNumberField/index.tsx","../node_modules/@material-ui/icons/Link.js","../node_modules/@material-ui/icons/Face.js","pages/app/Claims/ClaimDetails/tabs/JobInfo/ClaimDetailsCard.tsx","../node_modules/@material-ui/icons/AssignmentInd.js"],"names":["DateField","variant","startAdornment","endAdornment","props","component","DatePicker","inputVariant","format","placeholder","InputProps","position","Paper","title","children","loading","classes","useStyles","className","paperTitle","paperContent","style","height","width","display","alignItems","justifyContent","makeStyles","theme","mixins","gutters","background","palette","primary","main","color","contrastText","borderRadius","paddingTop","spacing","paddingBottom","fontSize","fontWeight","ComboBoxField","options","name","multiple","disabled","readOnly","fullWidth","isSubmitting","useFormikContext","useField","field","meta","helpers","React","useState","value","setValue","fieldValue","optionString","JSON","stringify","useEffect","length","currentValue","filter","option","includes","find","error","touched","isError","Boolean","onChange","e","selected","map","x","disableCloseOnSelect","filterSelectedOptions","getOptionLabel","label","groupBy","group","renderInput","params","mappedStartAdornment","mappedEndAdornment","helperText","flexWrap","renderTags","join","margin","paddingLeft","whiteSpace","overflow","textOverflow","renderOption","Fragment","key","icon","checkedIcon","marginRight","checked","FormikInfoField","rowsMax","root","multiline","InputLabelProps","shrink","borderBottom","unMountOn","xs","Comp","TextField","item","MoneyField","fixedDecimal","decimalScale","allowNegative","inputComponent","MoneyFormat","inputProps","autoComplete","inputRef","fixedDecimalScale","getInputRef","onValueChange","values","target","floatValue","refNumberRegexp","RefNumberField","validate","test","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","gql","optionData","claimMeta","useClaimMeta","isCollectBuildingExcess","claim","building","toCollectExcess","isCollectContentsExcess","contents","isCollectRestorationExcess","restoration","container","InfoField","required","maxDate","Date","managers","externalAdjusters","insurer","contentsref","hasContents","SwitchField","quickrepair","eventTypes","catCodes","policyTypes","policyTypeSuppliersView","policyCovers","policyCoverSuppliersView","enableMultipleRisks","additionalRefNo","internalAssessors","useInternalAssessor","cm2nd","me","userType","renderField"],"mappings":"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","file":"static/js/44.5465d5fd.chunk.js","sourcesContent":["import React from 'react'\n\nimport { Field } from 'formik'\nimport { DatePicker } from 'formik-material-ui-pickers' // DatePickerProps\n// import { DatePickerProps } from '@material-ui/pickers'\nimport { InputAdornment } from '@material-ui/core'\n\n// export type DateFieldProps = Omit<DatePickerProps, 'variant'>\n// & {\n//   name: string\n\n//   variant?: 'standard' | 'outlined' | 'filled'\n//   startAdornment?: React.ReactElement\n//   endAdornment?: React.ReactElement,\n// }\n\nconst DateField: React.FC<any> = ({ variant = 'standard', startAdornment, endAdornment, ...props }) => {\n  return (\n    <Field component={DatePicker}\n      {...props}\n      variant='inline'\n      inputVariant={variant}\n      format='dd/MM/yyyy'\n      placeholder='DD/MM/YYYY'\n\n      InputProps={{\n        ...props.InputProps,\n        startAdornment: !startAdornment ? null : (\n          <InputAdornment position='start'>\n            {startAdornment}\n          </InputAdornment>\n        ),\n        endAdornment: !endAdornment ? null : (\n          <InputAdornment position='end'>\n            {endAdornment}\n          </InputAdornment>\n        )\n      }}\n    />\n  )\n}\nexport default DateField","import React from 'react'\nimport {\n  Paper as MuiPaper,\n  PaperProps as MuiPaperProps,\n  makeStyles,\n  CircularProgress,\n} from '@material-ui/core'\n\ninterface PaperProps extends MuiPaperProps {\n  title?: any\n  loading?: boolean\n}\nconst Paper: React.FC<PaperProps> = ({ title, children, loading, ...props }) => {\n  const classes = useStyles({})\n\n  return (\n    <>\n      {title &&\n        <div className={classes.paperTitle}>\n          {title}\n        </div>\n      }\n      <MuiPaper className={classes.paperContent} {...props}>\n        {loading && (\n          <div style={{ height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n            <CircularProgress />\n          </div>\n        )}\n        {!loading && children}\n      </MuiPaper>\n    </>\n  )\n}\nexport default Paper\n\nconst useStyles = makeStyles(theme => ({\n  paperTitle: {\n    ...theme.mixins.gutters(),\n    background: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    borderRadius: '8px 8px 0 0',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    fontSize: '1rem',\n    fontWeight: 800\n  },\n  paperContent: {\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  }\n}))","import React from 'react'\n\nimport { useField, useFormikContext } from 'formik'\nimport Autocomplete from '@material-ui/lab/Autocomplete' // , { AutocompleteProps }\nimport { TextField, Checkbox, TextFieldProps, CircularProgress } from '@material-ui/core' // InputAdornment\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank'\nimport CheckBoxIcon from '@material-ui/icons/CheckBox'\n\nexport type ComboBoxFieldProps =\n  // AutocompleteProps &\n  TextFieldProps &\n  {\n    startAdornment?: React.ReactElement\n    options?: ComboBoxFieldOption[]\n    name: string\n    multiple?: boolean\n    readOnly?: boolean\n    loading?: boolean\n  }\nexport type ComboBoxFieldOption = {\n  label?: string\n  value: string\n  group?: string\n}\nconst ComboBoxField: React.FC<ComboBoxFieldProps> = ({ options = [], name, multiple = false, disabled, readOnly, fullWidth, loading, startAdornment, ...props }) => {\n  const { isSubmitting } = useFormikContext()\n\n  const [field, meta, helpers] = useField(name)\n  const [value, setValue] = React.useState<any>('')\n  const fieldValue = field.value\n  const optionString = JSON.stringify(options)\n  React.useEffect(() => {\n    if(options && options.length) {\n      // TODO\n      const currentValue = multiple\n        // eslint-disable-next-line\n        ? options.filter(option => fieldValue.includes(option.value))\n        // eslint-disable-next-line\n        : options.find(option => option.value == fieldValue)\n\n      setValue(currentValue)\n    }\n    // eslint-disable-next-line\n  }, [fieldValue, multiple, optionString]) // optionString\n  const handleValueChange = (e: any, selected: any) => {\n    if (!selected) return helpers.setValue('')\n\n    const value = !multiple\n      ? selected.value\n      : selected.map((x: any) => x.value)\n    helpers.setValue(value)\n  }\n\n  const { error, touched } = meta\n  const isError = Boolean(touched && error)\n\n  return (\n    // @ts-ignore\n    <Autocomplete\n      {...props}\n      value={value}\n      onChange={handleValueChange}\n\n      disabled={loading || disabled || readOnly || isSubmitting}\n\n      multiple={multiple}\n      disableCloseOnSelect={multiple}\n      filterSelectedOptions={!multiple}\n\n      // @ts-ignore\n      options={options}\n      getOptionLabel={(option: any) => option.label || ''}\n      groupBy={(option: any) => option.group}\n      renderInput={params => {\n        const mappedStartAdornment = multiple ? params.InputProps.startAdornment :\n          startAdornment ? startAdornment :\n          null\n\n        const mappedEndAdornment = loading\n          ? <CircularProgress style={{ width: 30, height: 30 }} />\n          : params.InputProps.endAdornment\n\n        return (\n          // @ts-ignore\n          <TextField\n            error={isError}\n            helperText={isError ? error : null}\n            fullWidth={fullWidth}\n            // {...field}\n            {...props}\n            {...params}\n            InputProps={{\n              ...params.InputProps,\n              style: { flexWrap: 'nowrap' },\n              startAdornment: mappedStartAdornment,\n              endAdornment: mappedEndAdornment,\n            }}\n          />\n        )\n      }}\n      renderTags={(value: any) => {\n        const label = value.map(({ label }: any) => label).join(', ')\n\n        return (\n          <p style={{\n            margin: 0, paddingLeft: 6,\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis'\n          }}>\n            {label}\n          </p>\n        )\n      }}\n      renderOption={(option: any, { selected }) => (\n        <React.Fragment key={option.value}>\n          {multiple && (\n            <Checkbox\n              icon={<CheckBoxOutlineBlankIcon fontSize='small' />}\n              checkedIcon={<CheckBoxIcon fontSize='small' />}\n              style={{ marginRight: 8 }}\n              checked={selected}\n            />\n          )}\n          {option.label}\n        </React.Fragment>\n      )}\n    />\n  )\n}\nexport default ComboBoxField","import React from 'react'\n\nimport TextField, { FormikTextFieldProps } from 'components/Formik/TextField'\nimport { makeStyles } from '@material-ui/core'\n\nexport type FormikInfoFieldProps = FormikTextFieldProps\n\nconst FormikInfoField: React.FC<FormikInfoFieldProps> = ({ InputProps, rowsMax = 3, className, variant, ...props }) => {\n  const classes = useStyles()\n\n  return (\n    <TextField {...props}\n      className={`${className} ${classes.root}`}\n      multiline\n      rowsMax={rowsMax}\n      InputProps={{\n        ...InputProps,\n        readOnly: true\n      }}\n      InputLabelProps={{ shrink: true }}\n    />\n  )\n}\nexport default FormikInfoField\n\nconst useStyles = makeStyles({\n  root: {\n    '& .MuiInput-underline:before': {\n      borderBottom: 'none'\n    }\n  }\n})","import React from 'react'\nimport { Grid } from '@material-ui/core'\nimport TextField from 'components/Formik/TextField'\n\nexport default ({ unMountOn, xs = 3, component: Comp = TextField, ...props }: any) => (\n  <Grid item xs={xs} key={props.name}>\n    {!unMountOn && <Comp {...props} variant='outlined' fullWidth />}\n  </Grid>\n)","import React from 'react'\n\nimport NumberFormat from 'react-number-format'\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney'\nimport TextField, { FormikTextFieldProps } from 'components/Formik/TextField'\n\ntype MoneyFieldProps = FormikTextFieldProps & {\n  fixedDecimal?: boolean\n  decimalScale?: number\n  format?: string\n  allowNegative?: boolean\n}\nconst MoneyField: React.FC<MoneyFieldProps> = ({ fixedDecimal, decimalScale, format, allowNegative, ...props }) => {\n  return (\n    <TextField\n      {...props}\n      startAdornment={<AttachMoneyIcon />}\n      // @ts-ignore\n      InputProps={{\n        inputComponent: MoneyFormat,\n        inputProps: {\n          autoComplete: 'disabled_auto_complete',\n          fixedDecimal,\n          decimalScale,\n          format,\n          allowNegative\n        }\n      }}\n    />\n  )\n}\nexport default MoneyField\n\nconst MoneyFormat = ({\n  fixedDecimal = true,\n  decimalScale = 2,\n  allowNegative = true,\n  inputRef,\n  onChange, name,\n  ...props\n}: any) => {\n  return (\n    <NumberFormat\n      {...props}\n\n      allowNegative={allowNegative}\n      decimalScale={decimalScale}\n      fixedDecimalScale={fixedDecimal}\n\n      name={name}\n      getInputRef={inputRef}\n      onValueChange={(values: any) => {\n        onChange({\n          target: {\n            name,\n            value: values.floatValue\n          }\n        })\n      }}\n    />\n  )\n}","import React from 'react'\n\nimport TextField, { FormikTextFieldProps } from 'components/Formik/TextField'\n\nexport const refNumberRegexp = /^[A-Za-z0-9]+$/\n\nexport type FormikRefNumberFieldProps = FormikTextFieldProps\n\nconst RefNumberField: React.FC<FormikRefNumberFieldProps> = ({ validate, ...props }) => {\n  return (\n    <TextField\n      {...props}\n      validate={value => {\n        if (value && !refNumberRegexp.test(value)) return 'Invalid reference number'\n\n        if (validate) return validate(value)\n      }}\n    />\n  )\n}\nexport default RefNumberField","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"\n}), 'Link');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9 11.75c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zm6 0c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8 0-.29.02-.58.05-.86 2.36-1.05 4.23-2.98 5.21-5.37C11.07 8.33 14.05 10 17.42 10c.78 0 1.53-.09 2.25-.26.21.71.33 1.47.33 2.26 0 4.41-3.59 8-8 8z\"\n}), 'Face');\n\nexports.default = _default;","import React from 'react'\nimport Paper from 'components/Paper'\nimport { Grid } from '@material-ui/core'\n\nimport renderField from './renderField'\nimport InfoField from 'components/Formik/InfoField'\nimport DateField from 'components/Formik/DateField'\nimport ComboBoxField from 'components/Formik/ComboBoxField'\nimport RefNumberField from 'components/FormikCustom/RefNumberField'\nimport SwitchField from 'components/Formik/SwitchField'\nimport MoneyField from 'components/FormikCustom/MoneyField'\n\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd'\nimport LinkIcon from '@material-ui/icons/Link'\nimport FaceIcon from '@material-ui/icons/Face'\n\nimport { gql } from '@apollo/client'\nimport { JobInfoQuery } from 'generated/graphql'\nimport { useClaimMeta } from '../../ClaimMetaContext'\n\ngql`\n  fragment JobInfo_ClaimDetailsCardFragment on Query {\n    managers: claimFilterOptions(where: $managersWhere) {\n      label: name\n      value\n    }\n    externalAdjusters: claimFilterOptions(where: $externalAdjustersWhere) {\n      label: name\n      value\n    }\n    eventTypes: claimFilterOptions(where: $eventTypeWhere) {\n      label: name\n      value\n    }\n    catCodes: claimFilterOptions(where: $catCodesWhere) {\n      label: name\n      value\n    }\n    policyTypes: claimFilterOptions(where: $policyTypesWhere) {\n      label: name\n      value\n    }\n    policyCovers: claimFilterOptions(where: $policyCoversWhere) {\n      label: name\n      value\n    }\n    internalAssessors: claimFilterOptions(where: $internalAssessorsWhere) {\n      label: name\n      value\n    }\n  }\n`\ngql`\n  fragment JobInfo_ClaimDetailsCardMetaFragment on ClaimJob {\n    hasContents\n    insurer {\n      contentsref\n      quickrepair\n      policyTypeSuppliersView\n      policyCoverSuppliersView\n      enableMultipleRisks\n      additionalRefNo\n      useInternalAssessor\n      cm2nd\n    }\n\n    building { toCollectExcess excessValue }\n    contents { toCollectExcess excessValue }\n    restoration { toCollectExcess excessValue }\n  }\n`\n\ntype ClaimDetailsCardProps = {\n  optionData?: JobInfoQuery\n}\nexport default ({ optionData }: ClaimDetailsCardProps) => {\n  const claimMeta = useClaimMeta()\n\n  const isCollectBuildingExcess = claimMeta?.claim?.building?.toCollectExcess !== null\n  const isCollectContentsExcess = claimMeta?.claim?.contents?.toCollectExcess !== null\n  const isCollectRestorationExcess = claimMeta?.claim?.restoration?.toCollectExcess !== null\n\n  return (\n    <Paper title='Claim Details'>\n      <Grid container spacing={3}>\n        {[\n          {\n            component: InfoField,\n            label: 'Insurance Company',\n            name: 'meta.insurance'\n          },\n          {\n            component: DateField,\n            label: 'Incident Date',\n            name: 'incidentDate',\n            required: true,\n            maxDate: new Date()\n          },\n          {\n            component: ComboBoxField,\n            label: 'Case Manager',\n            name: 'casemanagerId',\n            required: true,\n            options: optionData?.managers\n          },\n          {\n            component: ComboBoxField,\n            label: 'External Loss Adjusting Firm',\n            name: 'externalLossAdjusterId',\n            options: optionData?.externalAdjusters,\n            startAdornment: <AssignmentIndIcon />\n          },\n\n          {\n            component: RefNumberField,\n            label: 'Insurance Ref #',\n            name: 'refNumber',\n            required: true,\n            startAdornment: <LinkIcon />\n          },\n          {\n            component: RefNumberField,\n            label: 'Contents Ref #',\n            name: 'contentsRefNum',\n            startAdornment: <LinkIcon />,\n            unMountOn: !claimMeta?.claim?.insurer?.contentsref || !claimMeta?.claim?.hasContents,\n          },\n          {\n            component: InfoField,\n            label: 'Builder Allocated',\n            name: 'meta.builderAllocated'\n          },\n          {\n            component: InfoField,\n            label: 'Restorer Allocated',\n            name: 'meta.restorerAllocated'\n          },\n\n          {\n            component: InfoField,\n            label: 'FNOL',\n            name: 'meta.fnol'\n          },\n          {\n            component: SwitchField,\n            label: 'Scope & Repair (Quick Repair)',\n            name: 'hold',\n            unMountOn: !claimMeta?.claim?.insurer?.quickrepair\n          },\n          {\n            xs: 2,\n            component: SwitchField,\n            label: 'Builder Collect Excess',\n            name: 'portfolios[0].toCollectExcess',\n            disabled: !isCollectBuildingExcess\n          },\n          {\n            xs: 2,\n            component: MoneyField,\n            label: 'Excess',\n            name: 'portfolios[0].excessValue',\n            disabled: !isCollectBuildingExcess,\n            required: isCollectBuildingExcess,\n            fixedDecimal: false, decimalScale: 0, format: '#########',\n          },\n          {\n            xs: 2,\n            component: MoneyField,\n            label: 'Sum Insured',\n            name: 'portfolios[0].sumInsured',\n            disabled: !isCollectBuildingExcess,\n            required: isCollectBuildingExcess,\n            fixedDecimal: false, decimalScale: 0, format: '#########',\n          },\n\n          {\n            component: ComboBoxField,\n            label: 'Event Type',\n            name: 'eventTypeId',\n            options: optionData?.eventTypes,\n            required: true,\n          },\n          {\n            component: ComboBoxField,\n            label: 'Catastrophe Code',\n            name: 'catCodeId',\n            options: optionData?.catCodes,\n            required: true,\n          },\n          {\n            xs: 2,\n            component: SwitchField,\n            label: 'Contents Provider Collect Excess',\n            name: 'portfolios[1].toCollectExcess',\n            disabled: !isCollectContentsExcess\n          },\n          {\n            xs: 2,\n            component: MoneyField,\n            label: 'Excess',\n            name: 'portfolios[1].excessValue',\n            required: isCollectContentsExcess,\n            disabled: !isCollectContentsExcess,\n            fixedDecimal: false, decimalScale: 0, format: '#########',\n          },\n          {\n            xs: 2,\n            component: MoneyField,\n            label: 'Sum Insured',\n            name: 'portfolios[1].sumInsured',\n            required: isCollectContentsExcess,\n            disabled: !isCollectContentsExcess,\n            fixedDecimal: false, decimalScale: 0, format: '#########',\n          },\n\n          {\n            component: ComboBoxField,\n            label: 'Distributor',\n            name: 'policyTypeId',\n            options: optionData?.policyTypes,\n            required: true,\n            unMountOn: !claimMeta?.claim?.insurer?.policyTypeSuppliersView\n          },\n          {\n            component: ComboBoxField,\n            label: 'PDS Reference',\n            name: 'policyCoverId',\n            options: optionData?.policyCovers,\n            required: true,\n            unMountOn: !claimMeta?.claim?.insurer?.policyCoverSuppliersView,\n          },\n          {\n            xs: 2,\n            component: SwitchField,\n            label: 'Restorer Collect Excess',\n            name: 'portfolios[2].toCollectExcess',\n            disabled: !isCollectRestorationExcess\n          },\n          {\n            xs: 2,\n            component: MoneyField,\n            label: 'Excess',\n            name: 'portfolios[2].excessValue',\n            required: isCollectRestorationExcess,\n            disabled: !isCollectRestorationExcess,\n            fixedDecimal: false, decimalScale: 0, format: '#########',\n          },\n          {\n            xs: 2,\n            component: MoneyField,\n            label: 'Sum Insured',\n            name: 'portfolios[2].sumInsured',\n            required: isCollectRestorationExcess,\n            disabled: !isCollectRestorationExcess,\n            fixedDecimal: false, decimalScale: 0, format: '#########',\n          },\n\n          {\n            label: 'Risk Name',\n            name: 'riskname',\n            unMountOn: !claimMeta?.claim?.insurer?.enableMultipleRisks,\n            startAdornment: <FaceIcon />,\n          },\n          {\n            label: 'Additional Ref #',\n            name: 'additionalRefNumber',\n            unMountOn: !claimMeta?.claim?.insurer?.additionalRefNo,\n            startAdornment: <LinkIcon />,\n          },\n          {\n            component: ComboBoxField,\n            label: 'Specialist Review',\n            name: 'homeAssessorId',\n            options: optionData?.internalAssessors,\n            unMountOn: !claimMeta?.claim?.insurer?.useInternalAssessor,\n          },\n          {\n            component: ComboBoxField,\n            label: 'BC/ BRC/ Loss Adjuster',\n            name: 'brcId',\n            options: optionData?.managers,\n            unMountOn: !claimMeta?.claim?.insurer?.cm2nd || claimMeta.me?.userType !== 'Administrator'\n          }\n        ].map(renderField)}\n      </Grid>\n    </Paper>\n  )\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 4c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H6v-1.4c0-2 4-3.1 6-3.1s6 1.1 6 3.1V19z\"\n}), 'AssignmentInd');\n\nexports.default = _default;"],"sourceRoot":""}