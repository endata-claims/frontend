{"version":3,"sources":["components/Formik/CheckboxField/index.tsx","../node_modules/@material-ui/core/esm/FormControl/FormControlContext.js","../node_modules/@material-ui/core/esm/FormControl/useFormControl.js","../node_modules/@material-ui/core/esm/internal/svg-icons/createSvgIcon.js","../node_modules/@material-ui/core/esm/FormControl/formControlState.js","../node_modules/@material-ui/core/esm/utils/useControlled.js","../node_modules/@material-ui/core/esm/InputBase/utils.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/FormControl/FormControl.js","../node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js","../node_modules/@material-ui/core/esm/FormLabel/FormLabel.js","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js"],"names":["FormikSwitch","label","disabled","readOnly","props","classes","useStyles","isSubmitting","useFormikContext","useField","name","field","meta","helpers","error","touched","isError","Boolean","component","className","root","row","checked","value","onClick","setValue","helperText","String","makeStyles","width","display","alignItems","justifyContent","transform","marginLeft","marginRight","FormControlContext","React","createContext","useFormControl","useContext","createSvgIcon","path","displayName","Component","memo","forwardRef","ref","createElement","SvgIcon","_extends","muiName","formControlState","_ref","states","muiFormControl","reduce","acc","state","useControlled","controlled","defaultProp","default","isControlled","useRef","undefined","current","_React$useState","useState","valueState","useCallback","newValue","hasValue","Array","isArray","length","isFilled","obj","SSR","arguments","defaultValue","isAdornedStart","startAdornment","SwitchBase","autoFocus","checkedProp","checkedIcon","defaultChecked","disabledProp","icon","id","inputProps","inputRef","onBlur","onChange","onFocus","required","tabIndex","type","other","_objectWithoutProperties","_useControlled","_useControlled2","_slicedToArray","setCheckedState","hasLabelFor","IconButton","clsx","role","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","height","top","left","margin","zIndex","FormControl","children","_props$color","color","_props$component","_props$disabled","_props$error","_props$fullWidth","fullWidth","_props$hiddenLabel","hiddenLabel","_props$margin","_props$required","size","_props$variant","variant","initialAdornedStart","Children","forEach","child","isMuiElement","adornedStart","setAdornedStart","_React$useState2","initialFilled","filled","setFilled","_React$useState3","focused","setFocused","onFilled","childContext","onEmpty","registerEffect","Provider","concat","capitalize","flexDirection","minWidth","border","verticalAlign","marginNormal","marginTop","marginBottom","marginDense","FormHelperText","fcs","contained","dangerouslySetInnerHTML","__html","theme","palette","text","secondary","typography","caption","textAlign","main","FormLabel","asterisk","body1","lineHeight","primary","colorSecondary","FormGroup","_props$row","flexWrap","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","_props$size","cloneElement","fontSize","colorPrimary","backgroundColor","fade","action","hoverOpacity"],"mappings":"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","file":"static/js/76.60097bc1.chunk.js","sourcesContent":["import React from 'react'\n\nimport {\n  Checkbox, CheckboxProps,\n  makeStyles,\n  FormControl, FormLabel, FormGroup, FormHelperText\n} from '@material-ui/core'\nimport { useField, useFormikContext } from 'formik'\n\ntype FormikCheckboxProps = CheckboxProps & {\n  name: string\n  label?: string\n}\nconst FormikSwitch: React.FC<FormikCheckboxProps> = ({ label, disabled, readOnly, ...props }) => {\n  const classes = useStyles()\n\n  const { isSubmitting } = useFormikContext()\n\n  const [field, meta, helpers] = useField(props.name)\n  const { error, touched } = meta\n  const isError = Boolean(touched && error)\n\n  return (\n    <FormControl component='fieldset' className={classes.root} error={isError}\n      disabled={disabled || readOnly || isSubmitting}\n    >\n      <FormLabel component='legend' className={classes.label}>\n        {label}\n      </FormLabel>\n      <FormGroup row className={classes.root}>\n        <Checkbox\n          {...props}\n          disabled={disabled || readOnly || isSubmitting}\n          checked={field.value}\n          onClick={() => helpers.setValue(!field.value)}\n        />\n      </FormGroup>\n      {isError && (\n        <FormHelperText className={classes.helperText}>\n          {String(error)}\n        </FormHelperText>\n      )}\n    </FormControl>\n  )\n}\nexport default FormikSwitch\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    transform: 'scale(0.75)'\n  },\n  helperText: {\n    marginLeft: 14,\n    marginRight: 14\n  }\n})","import React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","import React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../../SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({}, props, {\n      ref: ref\n    }), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","export default function formControlState(_ref) {\n  var props = _ref.props,\n      states = _ref.states,\n      muiFormControl = _ref.muiFormControl;\n  return states.reduce(function (acc, state) {\n    acc[state] = props[state];\n\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n\n    return acc;\n  }, {});\n}","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing \".concat(isControlled ? 'a ' : 'an un', \"controlled \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default value of an uncontrolled \".concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nexport function hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n} // Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\n\nexport function isFilled(obj) {\n  var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n} // Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\n\nexport function isAdornedStart(obj) {\n  return obj.startAdornment;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    zIndex: 0,\n    // Fix blur label text issue\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️Only one input can be used within a FormControl.\n */\n\nvar FormControl = React.forwardRef(function FormControl(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$hiddenLabel = props.hiddenLabel,\n      hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      size = props.size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"]);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      adornedStart = _React$useState[0],\n      setAdornedStart = _React$useState[1];\n\n  var _React$useState2 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      filled = _React$useState2[0],\n      setFilled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  var registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var registeredInput = React.useRef(false);\n\n    registerEffect = function registerEffect() {\n      if (registeredInput.current) {\n        console.error(['Material-UI: there are multiple InputBase components inside a FormControl.', 'This is not supported. It might cause infinite rendering loops.', 'Only use one InputBase.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return function () {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  var onFilled = React.useCallback(function () {\n    setFilled(true);\n  }, []);\n  var onEmpty = React.useCallback(function () {\n    setFilled(false);\n  }, []);\n  var childContext = {\n    adornedStart: adornedStart,\n    setAdornedStart: setAdornedStart,\n    color: color,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    margin: (size === 'small' ? 'dense' : undefined) || margin,\n    onBlur: function onBlur() {\n      setFocused(false);\n    },\n    onEmpty: onEmpty,\n    onFilled: onFilled,\n    onFocus: function onFocus() {\n      setFocused(true);\n    },\n    registerEffect: registerEffect,\n    required: required,\n    variant: variant\n  };\n  return React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\n  /**\n   * The contents of the form control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['none', 'dense', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.caption, {\n      textAlign: 'left',\n      marginTop: 3,\n      margin: 0,\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n    contained: {\n      marginLeft: 14,\n      marginRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {}\n  };\n};\nvar FormHelperText = React.forwardRef(function FormHelperText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'p' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      margin = props.margin,\n      required = props.required,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), children === ' ' ? // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : children);\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes = {\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.body1, {\n      lineHeight: 1,\n      padding: 0,\n      '&$focused': {\n        color: theme.palette.primary.main\n      },\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Styles applied to the root element if the color is secondary. */\n    colorSecondary: {\n      '&$focused': {\n        color: theme.palette.secondary.main\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {},\n\n    /* Styles applied to the asterisk element. */\n    asterisk: {\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }\n  };\n};\nvar FormLabel = React.forwardRef(function FormLabel(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'label' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      required = props.required,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(fcs.color || 'primary'))], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required),\n    ref: ref\n  }, other), children, fcs.required && React.createElement(\"span\", {\n    className: clsx(classes.asterisk, fcs.error && classes.error)\n  }, \"\\u2009\", '*'));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormLabel'\n})(FormLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);"],"sourceRoot":""}