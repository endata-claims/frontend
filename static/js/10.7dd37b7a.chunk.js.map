{"version":3,"sources":["components/Paper/index.tsx","components/Formik/CheckboxGroupField/index.tsx","components/Formik/ComboBoxField/index.tsx","components/Formik/DateField/index.tsx","components/Formik/InfoField/index.tsx","components/Formik/EditorField/index.tsx","pages/app/Claims/ClaimDetails/tabs/JobInfo/renderField.tsx","../node_modules/@material-ui/icons/Person.js","../node_modules/@material-ui/icons/LocationOn.js","../node_modules/@material-ui/icons/Phone.js","components/FormikCustom/MoneyField/index.tsx","../node_modules/@material-ui/icons/School.js","components/FormikCustom/RefNumberField/index.tsx","../node_modules/@material-ui/icons/Link.js","../node_modules/@material-ui/icons/Face.js","layouts/TabLayout/index.tsx","pages/app/Claims/ClaimDetails/tabs/JobInfo/ClaimDescriptionCard.tsx","pages/app/Claims/ClaimDetails/tabs/JobInfo/ClaimDetailsCard.tsx","pages/app/Claims/ClaimDetails/tabs/JobInfo/CustomerInfoCard.tsx","pages/app/Claims/ClaimDetails/tabs/JobInfo/PostalAddressCard.tsx","pages/app/Claims/ClaimDetails/tabs/JobInfo/QuotingBuilderCard.tsx","pages/app/Claims/ClaimDetails/tabs/JobInfo/QuotingRestorerCard.tsx","pages/app/Claims/ClaimDetails/tabs/JobInfo/TenantInfoCard.tsx","pages/app/Claims/ClaimDetails/tabs/JobInfo/index.tsx","../node_modules/@material-ui/icons/AssignmentInd.js","../node_modules/@material-ui/icons/Email.js","../node_modules/@material-ui/icons/Done.js","../node_modules/@material-ui/icons/FileCopy.js"],"names":["Paper","title","children","loading","props","classes","useStyles","className","paperTitle","paperContent","style","height","width","display","alignItems","justifyContent","makeStyles","theme","mixins","gutters","background","palette","primary","main","color","contrastText","borderRadius","paddingTop","spacing","paddingBottom","fontSize","fontWeight","CheckboxGroupField","name","label","options","disabled","readOnly","maxHeight","isSubmitting","useFormikContext","useField","field","meta","setValue","error","touched","isError","Boolean","fieldValue","value","fieldValueString","JSON","stringify","optionsString","currentState","React","useMemo","map","id","includes","overflow","component","root","row","key","control","checked","onChange","newFieldValue","s","filter","handleChange","helperText","String","transform","switch","marginLeft","marginRight","ComboBoxField","multiple","fullWidth","startAdornment","helpers","useState","optionString","useEffect","length","currentValue","option","find","e","selected","x","disableCloseOnSelect","filterSelectedOptions","getOptionLabel","groupBy","group","renderInput","params","mappedStartAdornment","InputProps","mappedEndAdornment","endAdornment","flexWrap","renderTags","join","margin","paddingLeft","whiteSpace","textOverflow","renderOption","Fragment","icon","checkedIcon","DateField","variant","DatePicker","inputVariant","format","placeholder","position","FormikInfoField","rowsMax","multiline","InputLabelProps","shrink","borderBottom","initialValue","RichTextEditor","createValueFromString","createEmptyValue","toolbarConfig","INLINE_STYLE_BUTTONS","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","toString","setTouched","unMountOn","xs","Comp","TextField","item","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","MoneyField","fixedDecimal","decimalScale","allowNegative","inputComponent","MoneyFormat","inputProps","autoComplete","inputRef","fixedDecimalScale","getInputRef","onValueChange","values","target","floatValue","refNumberRegexp","RefNumberField","validate","test","TabLayout","actions","body","nextStep","useClaimActions","marginTop","padding","marginBottom","size","onClick","open","flexGrow","index","container","EditorField","renderField","gql","optionData","claimMeta","useClaimMeta","isCollectBuildingExcess","claim","building","toCollectExcess","isCollectContentsExcess","contents","isCollectRestorationExcess","restoration","InfoField","required","maxDate","Date","managers","externalAdjusters","insurer","contentsref","hasContents","SwitchField","quickrepair","eventTypes","catCodes","policyTypes","policyTypeSuppliersView","policyCovers","policyCoverSuppliersView","enableMultipleRisks","additionalRefNo","internalAssessors","useInternalAssessor","cm2nd","me","userType","cashSettleAction","action","actionType","setupcustomerlogin","SelectField","_states","removeHabitableAsbestos","_claimCategories","hideCategoryOfClaim","console","log","startIcon","isDisplay","isDisabled","setFieldValue","formValues","riskAddressLine1","riskAddressSuburb","riskAddressState","riskAddressPostcode","quotingBuilders","scopingSupplier","companyId","quotingRestorers","data","useJobInfoTabUpdateMutation","updateClaim","enqueueSnackbar","useSnackbar","insurerId","claimJob","useJobInfoQuery","variables","managersWhere","subject","insurers","externalAdjustersWhere","eventTypeWhere","catCodesWhere","policyTypesWhere","policyCoversWhere","internalAssessorsWhere","whereQuotingBuilder","portfolios","PortfolioType","Building","postcode","incidentDetail","riskAddress","whereQuotingRestorer","Restoration","postalAddress","insured","initialValues","insurance","companyName","builderAllocated","_allocatedBuilder","restorerAllocated","_allocatedRestorer","fnol","lodgeDate","portfolioType","excessValue","sumInsured","quotingSupplierIds","incidentDate","parse","casemanagerId","caseManager","managerId","externalLossAdjusterId","externalLossAdjuster","refNumber","contentsRefNum","hold","eventTypeId","eventType","catCodeId","cATCode","cATCodeId","policyTypeId","policyType","policyCoverId","policyCover","riskname","additionalRefNumber","homeAssessorId","homeAssessor","assesorId","brcId","brc","insuredSalutation","salutation","insuredName","insuredEmail","email","line1","line2","requireCustomLogin","customLoginEmail","suburb","state","habitableProperty","category","insuredPhone1","phone1","insuredPhone2","phone2","insuredPhone3","phone3","insuredFax","fax","postalAddressLine1","postalAddressSuburb","postalAddressState","postalAddressPostcode","tenantName","tenantDetails","tenantPhone1","tenantPhone2","tenantPhone3","claimDescription","onSubmit","a","input","where","res","updateClaimJob","messages","success","claimDetailsRefetch","type","card"],"mappings":"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","file":"static/js/10.7dd37b7a.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  Paper as MuiPaper,\n  PaperProps as MuiPaperProps,\n  makeStyles,\n  CircularProgress,\n} from '@material-ui/core'\n\ninterface PaperProps extends MuiPaperProps {\n  title?: any\n  loading?: boolean\n}\nconst Paper: React.FC<PaperProps> = ({ title, children, loading, ...props }) => {\n  const classes = useStyles({})\n\n  return (\n    <>\n      {title &&\n        <div className={classes.paperTitle}>\n          {title}\n        </div>\n      }\n      <MuiPaper className={classes.paperContent} {...props}>\n        {loading && (\n          <div style={{ height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n            <CircularProgress />\n          </div>\n        )}\n        {!loading && children}\n      </MuiPaper>\n    </>\n  )\n}\nexport default Paper\n\nconst useStyles = makeStyles(theme => ({\n  paperTitle: {\n    ...theme.mixins.gutters(),\n    background: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    borderRadius: '8px 8px 0 0',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    fontSize: '1rem',\n    fontWeight: 800\n  },\n  paperContent: {\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  }\n}))","import React from 'react'\nimport { FormControl, makeStyles, FormGroup, FormLabel, FormHelperText, FormControlLabel, Checkbox } from '@material-ui/core'\nimport { useField, useFormikContext } from 'formik'\n\nexport type CheckboxGroupFieldProps = {\n  name: string\n  label?: string\n  options?: Option[] | null\n  disabled?: boolean\n  readOnly?: boolean\n\n  display?: 'grid' | 'flex'\n  color?: 'primary' | 'secondary' | 'default'\n  maxHeight?: string\n}\ntype Option = {\n  label?: string\n  value: string\n}\nconst CheckboxGroupField: React.FC<CheckboxGroupFieldProps> = ({\n  name, label,\n  options,\n  disabled = false, readOnly = false,\n  display = 'grid', color = 'primary',\n  maxHeight = '100%',\n}) => {\n  const classes = useStyles()\n\n  const { isSubmitting } = useFormikContext()\n  const [field, meta, { setValue }] = useField(name)\n\n  const { error, touched } = meta\n  const isError = Boolean(touched && error)\n\n  const fieldValue = field.value\n  const fieldValueString = JSON.stringify(fieldValue)\n  const optionsString = JSON.stringify(options)\n  const currentState: any = React.useMemo(\n    () => options?.map(({ label, value }) => ({ label, id: value, value: fieldValue.includes(value) })),\n    // TODO\n    // eslint-disable-next-line\n    [fieldValueString, optionsString]\n  )\n\n  const handleChange = (value: any) => {\n    const newState = currentState.map((s: any) => {\n      if (s.id === value) return { ...s, value: !s.value}\n      return s\n    })\n    const newFieldValue = newState.filter(({ value }: any) => value).map(({ id }: any) => id)\n    setValue(newFieldValue)\n  }\n\n  return (\n    <div style={{ maxHeight, overflow: 'auto' }}>\n      <FormControl component='fieldset' className={classes.root} error={isError} disabled={isSubmitting || disabled || readOnly}>\n        <FormLabel component='legend' className={classes.label}>\n          {label}\n        </FormLabel>\n        <FormGroup row className={classes.root} style={{ display: display }}>\n          {options?.map(({ label, value }) => (\n            <FormControlLabel\n              key={value}\n              label={label}\n              control={(\n                <Checkbox\n                  {...field}\n                  value={value}\n                  checked={fieldValue.includes(value)}\n                  onChange={() => handleChange(value)}\n                  disabled={isSubmitting || disabled || readOnly}\n                  color={color}\n                />\n              )}\n            />\n          ))}\n        </FormGroup>\n        {isError && (\n          <FormHelperText className={classes.helperText}>\n            {String(error)}\n          </FormHelperText>\n        )}\n      </FormControl>\n    </div>\n  )\n}\nexport default CheckboxGroupField\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    // display: 'grid',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    transform: 'scale(0.75)'\n  },\n  switch: {\n    marginLeft: 'calc(50% - 31px)'\n  },\n  helperText: {\n    marginLeft: 14,\n    marginRight: 14\n  }\n})","import React from 'react'\n\nimport { useField, useFormikContext } from 'formik'\nimport Autocomplete from '@material-ui/lab/Autocomplete' // , { AutocompleteProps }\nimport { TextField, Checkbox, TextFieldProps, CircularProgress } from '@material-ui/core' // InputAdornment\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank'\nimport CheckBoxIcon from '@material-ui/icons/CheckBox'\n\nexport type ComboBoxFieldProps =\n  // AutocompleteProps &\n  TextFieldProps &\n  {\n    startAdornment?: React.ReactElement\n    options?: ComboBoxFieldOption[]\n    name: string\n    multiple?: boolean\n    readOnly?: boolean\n    loading?: boolean\n  }\nexport type ComboBoxFieldOption = {\n  label?: string\n  value: string\n  group?: string\n}\nconst ComboBoxField: React.FC<ComboBoxFieldProps> = ({ options = [], name, multiple = false, disabled, readOnly, fullWidth, loading, startAdornment, ...props }) => {\n  const { isSubmitting } = useFormikContext()\n\n  const [field, meta, helpers] = useField(name)\n  const [value, setValue] = React.useState<any>('')\n  const fieldValue = field.value\n  const optionString = JSON.stringify(options)\n  React.useEffect(() => {\n    if(options && options.length) {\n      // TODO\n      const currentValue = multiple\n        // eslint-disable-next-line\n        ? options.filter(option => fieldValue.includes(option.value))\n        // eslint-disable-next-line\n        : options.find(option => option.value == fieldValue)\n\n      setValue(currentValue)\n    }\n    // eslint-disable-next-line\n  }, [fieldValue, multiple, optionString]) // optionString\n  const handleValueChange = (e: any, selected: any) => {\n    if (!selected) return helpers.setValue('')\n\n    const value = !multiple\n      ? selected.value\n      : selected.map((x: any) => x.value)\n    helpers.setValue(value)\n  }\n\n  const { error, touched } = meta\n  const isError = Boolean(touched && error)\n\n  return (\n    // @ts-ignore\n    <Autocomplete\n      {...props}\n      value={value}\n      onChange={handleValueChange}\n\n      disabled={loading || disabled || readOnly || isSubmitting}\n\n      multiple={multiple}\n      disableCloseOnSelect={multiple}\n      filterSelectedOptions={!multiple}\n\n      // @ts-ignore\n      options={options}\n      getOptionLabel={(option: any) => option.label || ''}\n      groupBy={(option: any) => option.group}\n      renderInput={params => {\n        const mappedStartAdornment = multiple ? params.InputProps.startAdornment :\n          startAdornment ? startAdornment :\n          null\n\n        const mappedEndAdornment = loading\n          ? <CircularProgress style={{ width: 30, height: 30 }} />\n          : params.InputProps.endAdornment\n\n        return (\n          // @ts-ignore\n          <TextField\n            error={isError}\n            helperText={isError ? error : null}\n            fullWidth={fullWidth}\n            // {...field}\n            {...props}\n            {...params}\n            InputProps={{\n              ...params.InputProps,\n              style: { flexWrap: 'nowrap' },\n              startAdornment: mappedStartAdornment,\n              endAdornment: mappedEndAdornment,\n            }}\n          />\n        )\n      }}\n      renderTags={(value: any) => {\n        const label = value.map(({ label }: any) => label).join(', ')\n\n        return (\n          <p style={{\n            margin: 0, paddingLeft: 6,\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis'\n          }}>\n            {label}\n          </p>\n        )\n      }}\n      renderOption={(option: any, { selected }) => (\n        <React.Fragment key={option.value}>\n          {multiple && (\n            <Checkbox\n              icon={<CheckBoxOutlineBlankIcon fontSize='small' />}\n              checkedIcon={<CheckBoxIcon fontSize='small' />}\n              style={{ marginRight: 8 }}\n              checked={selected}\n            />\n          )}\n          {option.label}\n        </React.Fragment>\n      )}\n    />\n  )\n}\nexport default ComboBoxField","import React from 'react'\n\nimport { Field } from 'formik'\nimport { DatePicker } from 'formik-material-ui-pickers'\nimport { DatePickerProps } from '@material-ui/pickers'\nimport { InputAdornment } from '@material-ui/core'\n\nexport type DateFieldProps = Omit<DatePickerProps, 'variant'> & {\n  name: string\n\n  variant: 'standard' | 'outlined' | 'filled'\n  startAdornment?: React.ReactElement\n  endAdornment?: React.ReactElement,\n}\n\nconst DateField: React.FC<DateFieldProps> = ({ variant, startAdornment, endAdornment, ...props }) => {\n  return (\n    <Field component={DatePicker}\n      {...props}\n      variant='inline'\n      inputVariant={variant}\n      format='dd/MM/yyyy'\n      placeholder='DD/MM/YYYY'\n\n      InputProps={{\n        ...props.InputProps,\n        startAdornment: !startAdornment ? null : (\n          <InputAdornment position='start'>\n            {startAdornment}\n          </InputAdornment>\n        ),\n        endAdornment: !endAdornment ? null : (\n          <InputAdornment position='end'>\n            {endAdornment}\n          </InputAdornment>\n        )\n      }}\n    />\n  )\n}\nexport default DateField","import React from 'react'\n\nimport TextField, { FormikTextFieldProps } from 'components/Formik/TextField'\nimport { makeStyles } from '@material-ui/core'\n\nexport type FormikInfoFieldProps = FormikTextFieldProps\n\nconst FormikInfoField: React.FC<FormikInfoFieldProps> = ({ InputProps, rowsMax = 3, className, variant, ...props }) => {\n  const classes = useStyles()\n\n  return (\n    <TextField {...props}\n      className={`${className} ${classes.root}`}\n      multiline\n      rowsMax={rowsMax}\n      InputProps={{\n        ...InputProps,\n        readOnly: true\n      }}\n      InputLabelProps={{ shrink: true }}\n    />\n  )\n}\nexport default FormikInfoField\n\nconst useStyles = makeStyles({\n  root: {\n    '& .MuiInput-underline:before': {\n      borderBottom: 'none'\n    }\n  }\n})","import React from 'react'\n\nimport { useField, useFormikContext } from 'formik'\nimport RichTextEditor from 'react-rte'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\n\nexport default ({ name, label, placeholder, disabled, ...props }: any) => {\n  const { isSubmitting } = useFormikContext()\n\n  const [field, meta, helpers] = useField(name)\n  const { error, touched } = meta\n  const isError = Boolean(touched && error)\n\n  const initialValue = field.value\n    ? RichTextEditor.createValueFromString(field.value, 'html')\n    : RichTextEditor.createEmptyValue()\n  const [value, setValue] = React.useState<any>(initialValue)\n\n  return (\n    <FormControl error={isError} style={{ width: '100%' }} id={field.name}>\n      <RichTextEditor\n        {...props}\n        disabled={disabled || isSubmitting}\n        placeholder={placeholder || label}\n        toolbarConfig={{\n          display: [\n            'INLINE_STYLE_BUTTONS',\n            'BLOCK_TYPE_BUTTONS',\n            'BLOCK_TYPE_DROPDOWN',\n            'HISTORY_BUTTONS'\n          ],\n          INLINE_STYLE_BUTTONS: [\n            { label: 'Bold', style: 'BOLD', className: 'custom-css-class' },\n            { label: 'Italic', style: 'ITALIC' },\n            { label: 'Underline', style: 'UNDERLINE' }\n          ],\n          BLOCK_TYPE_DROPDOWN: [\n            { label: 'Normal', style: 'unstyled' },\n            { label: 'Heading Large', style: 'header-one' },\n            { label: 'Heading Medium', style: 'header-two' },\n            { label: 'Heading Small', style: 'header-three' }\n          ],\n          BLOCK_TYPE_BUTTONS: [\n            { label: 'UL', style: 'unordered-list-item' },\n            { label: 'OL', style: 'ordered-list-item' }\n          ]\n        }}\n        value={value}\n        onChange={(value: any) => {\n          setValue(value)\n          helpers.setValue(value.toString('html'))\n          helpers.setTouched(true)\n        }}\n      />\n      {isError && (\n        <FormHelperText style={{ marginLeft: 14, marginRight: 14 }}>\n          {error}\n        </FormHelperText>\n      )}\n    </FormControl>\n  )\n}","import React from 'react'\nimport { Grid } from '@material-ui/core'\nimport TextField from 'components/Formik/TextField'\n\nexport default ({ unMountOn, xs = 3, component: Comp = TextField, ...props }: any) => (\n  <Grid item xs={xs} key={props.name}>\n    {!unMountOn && <Comp {...props} variant='outlined' fullWidth />}\n  </Grid>\n)","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'LocationOn');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M6.62 10.79c1.44 2.83 3.76 5.14 6.59 6.59l2.2-2.2c.27-.27.67-.36 1.02-.24 1.12.37 2.33.57 3.57.57.55 0 1 .45 1 1V20c0 .55-.45 1-1 1-9.39 0-17-7.61-17-17 0-.55.45-1 1-1h3.5c.55 0 1 .45 1 1 0 1.25.2 2.45.57 3.57.11.35.03.74-.25 1.02l-2.2 2.2z\"\n}), 'Phone');\n\nexports.default = _default;","import React from 'react'\n\nimport NumberFormat from 'react-number-format'\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney'\nimport TextField, { FormikTextFieldProps } from 'components/Formik/TextField'\n\ntype MoneyFieldProps = FormikTextFieldProps & {\n  fixedDecimal?: boolean\n  decimalScale?: number\n  format?: string\n  allowNegative?: boolean\n}\nconst MoneyField: React.FC<MoneyFieldProps> = ({ fixedDecimal, decimalScale, format, allowNegative, ...props }) => {\n  return (\n    <TextField\n      {...props}\n      startAdornment={<AttachMoneyIcon />}\n      // @ts-ignore\n      InputProps={{\n        inputComponent: MoneyFormat,\n        inputProps: {\n          autoComplete: 'disabled_auto_complete',\n          fixedDecimal,\n          decimalScale,\n          format,\n          allowNegative\n        }\n      }}\n    />\n  )\n}\nexport default MoneyField\n\nconst MoneyFormat = ({\n  fixedDecimal = true,\n  decimalScale = 2,\n  allowNegative = true,\n  inputRef,\n  onChange, name,\n  ...props\n}: any) => {\n  return (\n    <NumberFormat\n      {...props}\n\n      allowNegative={allowNegative}\n      decimalScale={decimalScale}\n      fixedDecimalScale={fixedDecimal}\n\n      name={name}\n      getInputRef={inputRef}\n      onValueChange={(values: any) => {\n        onChange({\n          target: {\n            name,\n            value: values.floatValue\n          }\n        })\n      }}\n    />\n  )\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M5 13.18v4L12 21l7-3.82v-4L12 17l-7-3.82zM12 3L1 9l11 6 9-4.91V17h2V9L12 3z\"\n}), 'School');\n\nexports.default = _default;","import React from 'react'\n\nimport TextField, { FormikTextFieldProps } from 'components/Formik/TextField'\n\nexport const refNumberRegexp = /^[A-Za-z0-9]+$/\n\nexport type FormikRefNumberFieldProps = FormikTextFieldProps\n\nconst RefNumberField: React.FC<FormikRefNumberFieldProps> = ({ validate, ...props }) => {\n  return (\n    <TextField\n      {...props}\n      validate={value => {\n        if (value && !refNumberRegexp.test(value)) return 'Invalid reference number'\n\n        if (validate) return validate(value)\n      }}\n    />\n  )\n}\nexport default RefNumberField","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"\n}), 'Link');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9 11.75c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zm6 0c-.69 0-1.25.56-1.25 1.25s.56 1.25 1.25 1.25 1.25-.56 1.25-1.25-.56-1.25-1.25-1.25zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8 0-.29.02-.58.05-.86 2.36-1.05 4.23-2.98 5.21-5.37C11.07 8.33 14.05 10 17.42 10c.78 0 1.53-.09 2.25-.26.21.71.33 1.47.33 2.26 0 4.41-3.59 8-8 8z\"\n}), 'Face');\n\nexports.default = _default;","import React from 'react'\nimport { CircularProgress, Paper, Button } from '@material-ui/core'\nimport { useClaimActions } from 'pages/app/Claims/ClaimDetails/actions/ClaimActionProvider'\n\ninterface TabLayoutProps {\n  loading?: boolean\n  actions: any\n  body: any\n}\nconst TabLayout: React.FC<TabLayoutProps> = ({ loading, actions, body }) => {\n  const { nextStep } = useClaimActions()\n\n  if (loading) return (\n    <div style={{ height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n      <CircularProgress />\n    </div>\n  )\n\n  return (\n    <div className='tab-layout' style={{ height: '100%', marginTop: 8 }}>\n      <Paper style={{ padding: 8, display: 'flex', marginBottom: 4 }}>\n        <Button variant='outlined' color='primary' size='large' onClick={nextStep.open}>\n          Next Step\n        </Button>\n        <div style={{ flexGrow: 1 }} />\n        {actions.map(({ label, unMountOn, ...props }: any, index: number) => {\n          if(unMountOn) return null\n\n          return (\n            <Button\n              key={index}\n              style={{ marginRight: 8 }}\n              size='large'\n              color='primary'\n              variant='outlined'\n              {...props}\n            >\n              {label}\n            </Button>\n          )\n        })}\n      </Paper>\n      {body}\n    </div>\n  )\n}\nexport default TabLayout","import React from 'react'\nimport Paper from 'components/Paper'\nimport { Grid } from '@material-ui/core'\n\nimport renderField from './renderField'\nimport EditorField from 'components/Formik/EditorField'\n\nexport default () => {\n  return (\n    <Paper title='Claim Description'>\n      <Grid container spacing={3}>\n        {[\n          {\n            xs: 12,\n            component: EditorField,\n            name: 'claimDescription',\n          },\n        ].map(renderField)}\n      </Grid>\n    </Paper>\n  )\n}","import React from 'react'\nimport Paper from 'components/Paper'\nimport { Grid } from '@material-ui/core'\n\nimport renderField from './renderField'\nimport InfoField from 'components/Formik/InfoField'\nimport DateField from 'components/Formik/DateField'\nimport ComboBoxField from 'components/Formik/ComboBoxField'\nimport RefNumberField from 'components/FormikCustom/RefNumberField'\nimport SwitchField from 'components/Formik/SwitchField'\nimport MoneyField from 'components/FormikCustom/MoneyField'\n\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd'\nimport LinkIcon from '@material-ui/icons/Link'\nimport FaceIcon from '@material-ui/icons/Face'\n\nimport { gql } from '@apollo/client'\nimport { JobInfoQuery } from 'generated/graphql'\nimport { useClaimMeta } from '../../ClaimMetaContext'\n\ngql`\n  fragment JobInfo_ClaimDetailsCardFragment on Query {\n    managers: claimFilterOptions(where: $managersWhere) {\n      label: name\n      value\n    }\n    externalAdjusters: claimFilterOptions(where: $externalAdjustersWhere) {\n      label: name\n      value\n    }\n    eventTypes: claimFilterOptions(where: $eventTypeWhere) {\n      label: name\n      value\n    }\n    catCodes: claimFilterOptions(where: $catCodesWhere) {\n      label: name\n      value\n    }\n    policyTypes: claimFilterOptions(where: $policyTypesWhere) {\n      label: name\n      value\n    }\n    policyCovers: claimFilterOptions(where: $policyCoversWhere) {\n      label: name\n      value\n    }\n    internalAssessors: claimFilterOptions(where: $internalAssessorsWhere) {\n      label: name\n      value\n    }\n  }\n`\ngql`\n  fragment JobInfo_ClaimDetailsCardMetaFragment on ClaimJob {\n    hasContents\n    insurer {\n      contentsref\n      quickrepair\n      policyTypeSuppliersView\n      policyCoverSuppliersView\n      enableMultipleRisks\n      additionalRefNo\n      useInternalAssessor\n      cm2nd\n    }\n\n    building { toCollectExcess excessValue }\n    contents { toCollectExcess excessValue }\n    restoration { toCollectExcess excessValue }\n  }\n`\n\ntype ClaimDetailsCardProps = {\n  optionData?: JobInfoQuery\n}\nexport default ({ optionData }: ClaimDetailsCardProps) => {\n  const claimMeta = useClaimMeta()\n\n  const isCollectBuildingExcess = claimMeta?.claim?.building?.toCollectExcess !== null\n  const isCollectContentsExcess = claimMeta?.claim?.contents?.toCollectExcess !== null\n  const isCollectRestorationExcess = claimMeta?.claim?.restoration?.toCollectExcess !== null\n\n  return (\n    <Paper title='Claim Details'>\n      <Grid container spacing={3}>\n        {[\n          {\n            component: InfoField,\n            label: 'Insurance Company',\n            name: 'meta.insurance'\n          },\n          {\n            component: DateField,\n            label: 'Incident Date',\n            name: 'incidentDate',\n            required: true,\n            maxDate: new Date()\n          },\n          {\n            component: ComboBoxField,\n            label: 'Case Manager',\n            name: 'casemanagerId',\n            required: true,\n            options: optionData?.managers\n          },\n          {\n            component: ComboBoxField,\n            label: 'External Loss Adjusting Firm',\n            name: 'externalLossAdjusterId',\n            options: optionData?.externalAdjusters,\n            startAdornment: <AssignmentIndIcon />\n          },\n\n          {\n            component: RefNumberField,\n            label: 'Insurance Ref #',\n            name: 'refNumber',\n            required: true,\n            startAdornment: <LinkIcon />\n          },\n          {\n            component: RefNumberField,\n            label: 'Contents Ref #',\n            name: 'contentsRefNum',\n            startAdornment: <LinkIcon />,\n            unMountOn: !claimMeta?.claim?.insurer?.contentsref || !claimMeta?.claim?.hasContents,\n          },\n          {\n            component: InfoField,\n            label: 'Builder Allocated',\n            name: 'meta.builderAllocated'\n          },\n          {\n            component: InfoField,\n            label: 'Restorer Allocated',\n            name: 'meta.restorerAllocated'\n          },\n\n          {\n            component: InfoField,\n            label: 'FNOL',\n            name: 'meta.fnol'\n          },\n          {\n            component: SwitchField,\n            label: 'Scope & Repair (Quick Repair)',\n            name: 'hold',\n            unMountOn: !claimMeta?.claim?.insurer?.quickrepair\n          },\n          {\n            xs: 2,\n            component: SwitchField,\n            label: 'Builder Collect Excess',\n            name: 'portfolios[0].toCollectExcess',\n            disabled: !isCollectBuildingExcess\n          },\n          {\n            xs: 2,\n            component: MoneyField,\n            label: 'Excess',\n            name: 'portfolios[0].excessValue',\n            disabled: !isCollectBuildingExcess,\n            required: isCollectBuildingExcess,\n            fixedDecimal: false, decimalScale: 0, format: '#########',\n          },\n          {\n            xs: 2,\n            component: MoneyField,\n            label: 'Sum Insured',\n            name: 'portfolios[0].sumInsured',\n            disabled: !isCollectBuildingExcess,\n            required: isCollectBuildingExcess,\n            fixedDecimal: false, decimalScale: 0, format: '#########',\n          },\n\n          {\n            component: ComboBoxField,\n            label: 'Event Type',\n            name: 'eventTypeId',\n            options: optionData?.eventTypes,\n            required: true,\n          },\n          {\n            component: ComboBoxField,\n            label: 'Catastrophe Code',\n            name: 'catCodeId',\n            options: optionData?.catCodes,\n            required: true,\n          },\n          {\n            xs: 2,\n            component: SwitchField,\n            label: 'Contents Provider Collect Excess',\n            name: 'portfolios[1].toCollectExcess',\n            disabled: !isCollectContentsExcess\n          },\n          {\n            xs: 2,\n            component: MoneyField,\n            label: 'Excess',\n            name: 'portfolios[1].excessValue',\n            required: isCollectContentsExcess,\n            disabled: !isCollectContentsExcess,\n            fixedDecimal: false, decimalScale: 0, format: '#########',\n          },\n          {\n            xs: 2,\n            component: MoneyField,\n            label: 'Sum Insured',\n            name: 'portfolios[1].sumInsured',\n            required: isCollectContentsExcess,\n            disabled: !isCollectContentsExcess,\n            fixedDecimal: false, decimalScale: 0, format: '#########',\n          },\n\n          {\n            component: ComboBoxField,\n            label: 'Distributor',\n            name: 'policyTypeId',\n            options: optionData?.policyTypes,\n            required: true,\n            unMountOn: !claimMeta?.claim?.insurer?.policyTypeSuppliersView\n          },\n          {\n            component: ComboBoxField,\n            label: 'PDS Reference',\n            name: 'policyCoverId',\n            options: optionData?.policyCovers,\n            required: true,\n            unMountOn: !claimMeta?.claim?.insurer?.policyCoverSuppliersView,\n          },\n          {\n            xs: 2,\n            component: SwitchField,\n            label: 'Restorer Collect Excess',\n            name: 'portfolios[2].toCollectExcess',\n            disabled: !isCollectRestorationExcess\n          },\n          {\n            xs: 2,\n            component: MoneyField,\n            label: 'Excess',\n            name: 'portfolios[2].excessValue',\n            required: isCollectRestorationExcess,\n            disabled: !isCollectRestorationExcess,\n            fixedDecimal: false, decimalScale: 0, format: '#########',\n          },\n          {\n            xs: 2,\n            component: MoneyField,\n            label: 'Sum Insured',\n            name: 'portfolios[2].sumInsured',\n            required: isCollectRestorationExcess,\n            disabled: !isCollectRestorationExcess,\n            fixedDecimal: false, decimalScale: 0, format: '#########',\n          },\n\n          {\n            label: 'Risk Name',\n            name: 'riskname',\n            unMountOn: !claimMeta?.claim?.insurer?.enableMultipleRisks,\n            startAdornment: <FaceIcon />,\n          },\n          {\n            label: 'Additional Ref #',\n            name: 'additionalRefNumber',\n            unMountOn: !claimMeta?.claim?.insurer?.additionalRefNo,\n            startAdornment: <LinkIcon />,\n          },\n          {\n            component: ComboBoxField,\n            label: 'Specialist Review',\n            name: 'homeAssessorId',\n            options: optionData?.internalAssessors,\n            unMountOn: !claimMeta?.claim?.insurer?.useInternalAssessor,\n          },\n          {\n            component: ComboBoxField,\n            label: 'BC/ BRC/ Loss Adjuster',\n            name: 'brcId',\n            options: optionData?.managers,\n            unMountOn: !claimMeta?.claim?.insurer?.cm2nd || claimMeta.me?.userType !== 'Administrator'\n          }\n        ].map(renderField)}\n      </Grid>\n    </Paper>\n  )\n}","import React from 'react'\nimport Paper from 'components/Paper'\nimport { Grid, Button } from '@material-ui/core'\nimport { useClaimMeta } from '../../ClaimMetaContext'\n\nimport renderField from './renderField'\nimport SwitchField from 'components/Formik/SwitchField'\nimport SelectField from 'components/Formik/SelectField'\n\nimport SchoolIcon from '@material-ui/icons/School'\nimport PersonIcon from '@material-ui/icons/Person'\nimport EmailIcon from '@material-ui/icons/Email'\nimport LocationOnIcon from '@material-ui/icons/LocationOn'\nimport PhoneIcon from '@material-ui/icons/Phone'\nimport DoneIcon from '@material-ui/icons/Done'\n\nimport { gql } from '@apollo/client'\nimport { JobInfoQuery } from 'generated/graphql'\nimport { useFormikContext } from 'formik'\ngql`\n  fragment JobInfo_CustomerInfoCardMetaFragment on ClaimJob {\n    insurer {\n      setupcustomerlogin\n      removeHabitableAsbestos\n      hideCategoryOfClaim\n    }\n    actions {\n      actionType\n      isDisplay\n      isDisabled\n    }\n  }\n`\n\ntype CustomerInfoCardProps = {\n  optionData?: JobInfoQuery\n}\nexport default ({ optionData }: CustomerInfoCardProps) => {\n  const claimMeta = useClaimMeta()\n  const cashSettleAction = claimMeta?.claim?.actions?.find(action => action?.actionType === 'CLAIM_CASH_SETTLE')\n\n  const { isSubmitting } = useFormikContext()\n\n  return (\n    <Paper title='Customer & Property Information'>\n      <Grid container spacing={3}>\n        {[\n          {\n            label: 'Salutations',\n            name: 'insuredSalutation',\n            startAdornment: <SchoolIcon />,\n          },\n          {\n            label: 'Customer',\n            name: 'insuredName',\n            required: true,\n            startAdornment: <PersonIcon />,\n          },\n          {\n            xs: 6,\n            label: 'Customer Email',\n            name: 'insuredEmail',\n            startAdornment: <EmailIcon />,\n          },\n\n          {\n            xs: 6,\n            label: 'Property/Risk Address',\n            name: 'riskAddressLine1',\n            required: true,\n            startAdornment: <LocationOnIcon />,\n          },\n          {\n            xs: 2,\n            component: SwitchField,\n            label: 'Customer Login?',\n            name: 'requireCustomLogin',\n            unMountOn: claimMeta?.claim?.insurer?.setupcustomerlogin !== 1,\n          },\n          {\n            xs: 4,\n            label: 'Customer Login?',\n            name: 'customLoginEmail',\n            placeholder: 'e.g. Email Address',\n            unMountOn: claimMeta?.claim?.insurer?.setupcustomerlogin !== 1,\n            startAdornment: <EmailIcon />,\n          },\n\n          {\n            xs: 2,\n            label: 'Suburb',\n            name: 'riskAddressSuburb',\n            required: true,\n            startAdornment: <LocationOnIcon />,\n          },\n          {\n            xs: 2,\n            component: SelectField,\n            label: 'State',\n            name: 'riskAddressState',\n            options: optionData?._states,\n            required: true,\n            startAdornment: <LocationOnIcon />,\n          },\n          {\n            xs: 2,\n            label: 'Postcode',\n            name: 'riskAddressPostcode',\n            required: true,\n            startAdornment: <LocationOnIcon />,\n          },\n          {\n            component: SwitchField,\n            label: 'Home Habitable?',\n            name: 'habitableProperty',\n            unMountOn: claimMeta?.claim?.insurer?.removeHabitableAsbestos,\n          },\n          {\n            component: SelectField,\n            label: 'Category of Claim',\n            name: 'category',\n            options: optionData?._claimCategories,\n            unMountOn: claimMeta?.claim?.insurer?.hideCategoryOfClaim,\n          },\n\n          {\n            label: 'Phone 1',\n            name: 'insuredPhone1',\n            required: true,\n            startAdornment: <PhoneIcon />\n          },\n          {\n            label: 'Phone 2',\n            name: 'insuredPhone2',\n            startAdornment: <PhoneIcon />\n          },\n        ].map(renderField)}\n\n        {[\n          {\n            label: 'Finalise Claim',\n            unMountOn: claimMeta?.me?.userType !== 'Administrator',\n            onClick: () => {\n              console.log('open finallize claim')\n            },\n            startIcon: <DoneIcon />\n          },\n          {\n            label: 'Cash settle',\n            startIcon: <DoneIcon />,\n            unMountOn: !cashSettleAction?.isDisplay,\n            disabled: cashSettleAction?.isDisabled,\n            onClick: () => {\n              console.log('open cash settle')\n            }\n          },\n          { xs: 2 }\n        ].map(({ xs = 2, label, disabled, ...props }) => (\n          <Grid item xs={2} style={{ display: 'flex' }}>\n            {label && (\n              <Button\n                variant='outlined' color='primary' fullWidth\n                disabled={disabled || isSubmitting}\n                {...props}\n              >\n                {label}\n              </Button>\n            )}\n          </Grid>\n        ))}\n\n        {[\n          {\n            label: 'Phone 3',\n            name: 'insuredPhone3',\n            startAdornment: <PhoneIcon />\n          },\n          {\n            label: 'Fax',\n            name: 'insuredFax',\n            startAdornment: <PhoneIcon />\n          },\n        ].map(renderField)}\n      </Grid>\n    </Paper>\n  )\n}","import React from 'react'\nimport Paper from 'components/Paper'\nimport { Grid, Button } from '@material-ui/core'\n\nimport renderField from './renderField'\nimport SelectField from 'components/Formik/SelectField'\nimport LocationOnIcon from '@material-ui/icons/LocationOn'\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\n\nimport { JobInfoQuery } from 'generated/graphql'\nimport { useClaimMeta } from '../../ClaimMetaContext'\nimport { useFormikContext } from 'formik'\ntype CustomerInfoCardProps = {\n  optionData?: JobInfoQuery\n}\nexport default ({ optionData }: CustomerInfoCardProps) => {\n  const { values, setFieldValue, isSubmitting } = useFormikContext() // setTouched\n  const formValues = values as any\n\n  const claimMeta = useClaimMeta()\n  const handleSameAddress = () => {\n    // setTouched({\n    //   postalAddressLine1: true, postalAddressSuburb: true, postalAddressState: true, postalAddressPostcode: true,\n    // })\n    setFieldValue('postalAddressLine1', formValues.riskAddressLine1, false)\n    setFieldValue('postalAddressSuburb', formValues.riskAddressSuburb, false)\n    setFieldValue('postalAddressState', formValues.riskAddressState, false)\n    setFieldValue('postalAddressPostcode', formValues.riskAddressPostcode, false)\n  }\n\n  return (\n    <Paper title='Postal Address'>\n      <Grid container spacing={3}>\n        {[\n          {\n            xs: 8,\n            label: 'Postal Address',\n            name: 'postalAddressLine1',\n            startAdornment: <LocationOnIcon />,\n          },\n        ].map(renderField)}\n        <Grid item xs={4} style={{ display: 'flex' }}>\n          {claimMeta?.me?.userType === 'Administrator' && (\n            <Button\n              variant='outlined' color='primary' fullWidth\n              startIcon={<FileCopyIcon />}\n              onClick={handleSameAddress}\n              disabled={isSubmitting}\n            >\n              Same Address\n          </Button>\n          )}\n        </Grid>\n        {[\n          {\n            xs: 4,\n            label: 'Suburb',\n            name: 'postalAddressSuburb',\n            startAdornment: <LocationOnIcon />,\n          },\n          {\n            xs: 4,\n            component: SelectField,\n            label: 'State',\n            name: 'postalAddressState',\n            options: optionData?._states,\n            startAdornment: <LocationOnIcon />,\n          },\n          {\n            xs: 4,\n            label: 'Postcode',\n            name: 'postalAddressPostcode',\n            startAdornment: <LocationOnIcon />,\n          },\n        ].map(renderField)}\n      </Grid>\n    </Paper>\n  )\n}","import React from 'react'\nimport Paper from 'components/Paper'\nimport { Grid } from '@material-ui/core'\n\nimport renderField from './renderField'\nimport CheckboxGroupField from 'components/Formik/CheckboxGroupField'\n\nimport { gql } from '@apollo/client'\nimport { JobInfoQuery } from 'generated/graphql'\ngql`\n  fragment JobInfo_QuotingBuilderCardFragment on Query {\n    quotingBuilders: claimFilterOptions(where: $whereQuotingBuilder) {\n      label: name\n      value\n    }\n  }\n`\n\ntype ClaimDetailsCardProps = {\n  optionData?: JobInfoQuery\n  claim?: any\n}\nexport default ({ optionData, claim }: ClaimDetailsCardProps) => {\n  // TODO: change to strict compare !== when the api is fixed\n  // eslint-disable-next-line\n  const options = optionData?.quotingBuilders?.filter(option => option?.value != claim?.building?.scopingSupplier?.companyId)\n\n  return (\n    <Paper title='Quoting Builders'>\n      <Grid container spacing={3}>\n        {[\n          {\n            xs: 12,\n            component: CheckboxGroupField,\n            name: 'portfolios[0].quotingSupplierIds',\n            options: options,\n            maxHeight: '12rem'\n          },\n        ].map(renderField)}\n      </Grid>\n    </Paper>\n  )\n}","import React from 'react'\nimport Paper from 'components/Paper'\nimport { Grid } from '@material-ui/core'\n\nimport renderField from './renderField'\nimport CheckboxGroupField from 'components/Formik/CheckboxGroupField'\n\nimport { gql } from '@apollo/client'\nimport { JobInfoQuery } from 'generated/graphql'\ngql`\n  fragment JobInfo_QuotingRestorerCardFragment on Query {\n    quotingRestorers: claimFilterOptions(where: $whereQuotingRestorer) {\n      label: name\n      value\n    }\n  }\n`\n\ntype ClaimDetailsCardProps = {\n  optionData?: JobInfoQuery\n  claim?: any\n}\nexport default ({ optionData, claim }: ClaimDetailsCardProps) => {\n  // TODO: change to strict compare !== when the api is fixed\n  // eslint-disable-next-line\n  const options = optionData?.quotingRestorers?.filter(option => option?.value != claim?.restoration?.scopingSupplier?.companyId)\n\n  return (\n    <Paper title='Quoting Builders'>\n      <Grid container spacing={3}>\n        {[\n          {\n            xs: 12,\n            component: CheckboxGroupField,\n            name: 'portfolios[2].quotingSupplierIds',\n            options: options,\n            maxHeight: '12rem'\n          },\n        ].map(renderField)}\n      </Grid>\n    </Paper>\n  )\n}","import React from 'react'\nimport Paper from 'components/Paper'\nimport { Grid } from '@material-ui/core'\n\nimport renderField from './renderField'\nimport PersonIcon from '@material-ui/icons/Person'\nimport PhoneIcon from '@material-ui/icons/Phone'\n\nexport default () => {\n  return (\n    <Paper title='Tenant Information'>\n      <Grid container spacing={3}>\n        {[\n          {\n            xs: 8,\n            label: 'Tenant Name',\n            name: 'tenantName',\n            startAdornment: <PersonIcon />,\n          },\n        ].map(renderField)}\n        <Grid item xs={4} />\n\n        {[\n          {\n            xs: 4,\n            label: 'Phone 1',\n            name: 'tenantPhone1',\n            startAdornment: <PhoneIcon />,\n          },\n          {\n            xs: 4,\n            label: 'Phone 2',\n            name: 'tenantPhone2',\n            startAdornment: <PhoneIcon />,\n          },\n          {\n            xs: 4,\n            label: 'Phone 3',\n            name: 'tenantPhone3',\n            startAdornment: <PhoneIcon />,\n          },\n        ].map(renderField)}\n      </Grid>\n    </Paper>\n  )\n}","import React from 'react'\nimport { parse } from 'date-fns'\nimport { gql } from '@apollo/client'\nimport TabLayout from 'layouts/TabLayout'\nimport { CircularProgress, Grid } from '@material-ui/core'\nimport { Formik, Form } from 'formik'\nimport { ClaimDetailsQuery, useJobInfoQuery, PortfolioType, useJobInfoTabUpdateMutation } from 'generated/graphql'\n\nimport ClaimDetailsCard from './ClaimDetailsCard'\nimport CustomerInfoCard from './CustomerInfoCard'\nimport PostalAddressCard from './PostalAddressCard'\nimport TenantInfoCard from './TenantInfoCard'\nimport ClaimDescriptionCard from './ClaimDescriptionCard'\nimport QuotingBuilderCard from './QuotingBuilderCard'\nimport QuotingRestorerCard from './QuotingRestorerCard'\nimport { useClaimMeta } from '../../ClaimMetaContext'\nimport { useSnackbar } from 'notistack'\n\ngql`\n  fragment JobInfoTabFragment on ClaimJob {\n    id\n    insurer { companyId companyName }\n    incidentDetail { incidentDate }\n    caseManager { managerId }\n    externalLossAdjuster { companyId }\n    refNumber\n    contentsRefNum\n    # FNOL\n    lodgeDate\n    # Hold\n    incidentDetail { hold }\n    incidentDetail { eventType { eventTypeId } }\n    incidentDetail { cATCode { cATCodeId } }\n    # portfolio\n    building { toCollectExcess excessValue sumInsured }\n    contents { toCollectExcess excessValue sumInsured }\n    restoration { toCollectExcess excessValue sumInsured }\n    policyType { policyTypeId }\n    policyCover { policyCoverId }\n    riskname\n    additionalRefNumber\n    homeAssessor { assesorId }\n    brc { managerId }\n    building {\n      authorisedSupplier { companyName }\n      scopingSupplier { companyId companyName }\n      jobSuppliers {\n        supplier { companyId companyName }\n        quote { supplier { companyId companyName } }\n      }\n    }\n    _allocatedBuilder @client\n    restoration {\n      authorisedSupplier { companyName }\n      scopingSupplier { companyId companyName }\n      jobSuppliers {\n        supplier { companyId companyName }\n        quote { supplier { companyId companyName } }\n      }\n    }\n    _allocatedRestorer @client\n\n    insured {\n      salutation name email\n      phone1 phone2 phone3 fax\n      postalAddress {\n        line1 line2 suburb state postcode\n      }\n    }\n    incidentDetail {\n      riskAddress { line1 line2 suburb state postcode }\n      habitableProperty\n      category\n    }\n    requireCustomLogin\n    customLoginEmail\n\n    tenantDetails { name phone1 phone2 phone3 }\n\n    claimDescription\n  }\n`\n\ngql`\n  query JobInfo(\n    $managersWhere: ClaimJobFilter\n    $externalAdjustersWhere: ClaimJobFilter\n    $eventTypeWhere: ClaimJobFilter\n    $catCodesWhere: ClaimJobFilter\n    $policyTypesWhere: ClaimJobFilter\n    $policyCoversWhere: ClaimJobFilter\n    $internalAssessorsWhere: ClaimJobFilter\n    $whereQuotingBuilder: ClaimJobFilter\n    $whereQuotingRestorer: ClaimJobFilter\n  ) {\n    ...JobInfo_ClaimDetailsCardFragment\n    ...JobInfo_QuotingBuilderCardFragment\n    ...JobInfo_QuotingRestorerCardFragment\n    _states @client {\n      label @client\n      value @client\n    }\n    _claimCategories @client {\n      label @client\n      value @client\n    }\n  }\n`\n\ngql`\n  mutation JobInfoTabUpdate($input: ClaimJobInput!, $where: ENDataEntityKey!) {\n    updateClaimJob(input: $input, where: $where) {\n      success\n      messages\n      fieldErrors {\n        fieldName\n        level\n        message\n      }\n    }\n  }\n`\n\ntype JobInfoProps = {\n  data?: ClaimDetailsQuery\n  loading: boolean\n}\nexport default ({ data, loading }: JobInfoProps) => {\n  const [updateClaim] = useJobInfoTabUpdateMutation()\n  const claimMeta = useClaimMeta()\n  const { enqueueSnackbar } = useSnackbar()\n\n  const insurerId = String(data?.claimJob?.insurer?.companyId ?? 0)\n  const { data: optionData } = useJobInfoQuery({ // loading: optionLoading\n    variables: {\n      managersWhere: { subject: 'managers', insurers: [insurerId] },\n      externalAdjustersWhere: { subject: 'adjusters', insurers: [insurerId] },\n      eventTypeWhere: { subject: 'eventTypes', insurers: [insurerId] },\n      catCodesWhere: { subject: 'catCodes', insurers: [insurerId] },\n      policyTypesWhere: { subject: 'policyTypes', insurers: [insurerId]  },\n      policyCoversWhere: { subject: 'policyCovers', insurers: [insurerId] },\n      internalAssessorsWhere: { subject: 'internalAssessors', insurers: [insurerId] },\n      whereQuotingBuilder: {\n        subject: 'suppliers',\n        portfolios: [PortfolioType.Building],\n        insurers: [insurerId],\n        postcode: data?.claimJob?.incidentDetail?.riskAddress?.postcode\n      },\n      whereQuotingRestorer: {\n        subject: 'suppliers',\n        portfolios: [PortfolioType.Restoration],\n        insurers: [insurerId],\n        postcode: data?.claimJob?.incidentDetail?.riskAddress?.postcode\n      }\n    }\n  })\n\n  if (loading || !data) return <CircularProgress />\n  const claim = data.claimJob\n\n  const riskAddress = claim?.incidentDetail?.riskAddress\n  const postalAddress = claim?.insured?.postalAddress\n\n  return (\n    <Formik\n      initialValues={{\n        meta: {\n          insurance: claim?.insurer?.companyName,\n          builderAllocated: claim?._allocatedBuilder,\n          restorerAllocated: claim?._allocatedRestorer,\n          fnol: claim?.lodgeDate,\n        },\n        portfolios: [\n          {\n            portfolioType: 'Building',\n            toCollectExcess: claim?.building?.toCollectExcess ?? null,\n            excessValue: claim?.building?.excessValue ?? 0,\n            sumInsured: claim?.building?.sumInsured ?? 0,\n            quotingSupplierIds: [],\n          },\n          {\n            portfolioType: 'Contents',\n            toCollectExcess: claim?.contents?.toCollectExcess ?? null,\n            excessValue: claim?.contents?.excessValue ?? 0,\n            sumInsured: claim?.contents?.sumInsured ?? 0,\n          },\n          {\n            portfolioType: 'Restoration',\n            toCollectExcess: claim?.restoration?.toCollectExcess ?? null,\n            excessValue: claim?.restoration?.excessValue ?? 0,\n            sumInsured: claim?.restoration?.sumInsured ?? 0,\n            quotingSupplierIds: [],\n          },\n        ],\n        incidentDate: parse(claim?.incidentDetail?.incidentDate, 'dd/MM/yyyy', new Date()),\n        casemanagerId: claim?.caseManager?.managerId,\n        externalLossAdjusterId: claim?.externalLossAdjuster?.companyId,\n        refNumber: claim?.refNumber,\n        contentsRefNum: claim?.contentsRefNum,\n        hold: claim?.incidentDetail?.hold,\n        eventTypeId: claim?.incidentDetail?.eventType?.eventTypeId,\n        catCodeId: claim?.incidentDetail?.cATCode?.cATCodeId,\n        policyTypeId: claim?.policyType?.policyTypeId,\n        policyCoverId: claim?.policyCover?.policyCoverId,\n        riskname: claim?.riskname,\n        additionalRefNumber: claim?.additionalRefNumber,\n        homeAssessorId: claim?.homeAssessor?.assesorId,\n        brcId: claim?.brc?.managerId,\n\n        insuredSalutation: claim?.insured?.salutation,\n        insuredName: claim?.insured?.name,\n        insuredEmail: claim?.insured?.email,\n        riskAddressLine1: `${riskAddress?.line1}${riskAddress?.line2 ? `, ${riskAddress?.line2}` : ''}`,\n        requireCustomLogin: claim?.requireCustomLogin,\n        customLoginEmail: claim?.customLoginEmail,\n        riskAddressSuburb: riskAddress?.suburb,\n        riskAddressState: riskAddress?.state,\n        riskAddressPostcode: riskAddress?.postcode,\n        habitableProperty: claim?.incidentDetail?.habitableProperty,\n        category: claim?.incidentDetail?.category,\n        insuredPhone1: claim?.insured?.phone1,\n        insuredPhone2: claim?.insured?.phone2,\n        insuredPhone3: claim?.insured?.phone3,\n        insuredFax: claim?.insured?.fax,\n        postalAddressLine1: `${postalAddress?.line1 ?? ''}${postalAddress?.line2 ? `, ${postalAddress?.line2}` : ''}`,\n        postalAddressSuburb: postalAddress?.suburb,\n        postalAddressState: postalAddress?.state,\n        postalAddressPostcode: postalAddress?.postcode,\n        tenantName: claim?.tenantDetails?.name,\n        tenantPhone1: claim?.tenantDetails?.phone1,\n        tenantPhone2: claim?.tenantDetails?.phone2,\n        tenantPhone3: claim?.tenantDetails?.phone3,\n        claimDescription: claim?.claimDescription || '',\n      }}\n      onSubmit={async values => {\n        const input = (({ meta, ...rest }) => rest)(values)\n\n        const variables = {\n          where: {\n            id: claim?.id\n          },\n          input\n        }\n\n        // @ts-ignore\n        const res = await updateClaim({ variables })\n        if (res.data?.updateClaimJob?.messages) enqueueSnackbar(res.data.updateClaimJob.messages[0])\n\n        if (res.data?.updateClaimJob?.success) claimMeta?.claimDetailsRefetch()\n      }}\n    >\n      <Form>\n        <TabLayout\n          actions={[\n            { label: 'Save', type: 'submit' }\n          ]}\n          body={(\n            <Grid container spacing={1}>\n              {[\n                { card: <ClaimDetailsCard optionData={optionData} /> },\n                { card: <CustomerInfoCard optionData={optionData} /> },\n                { xs: 6, card: <PostalAddressCard optionData={optionData} /> },\n                { xs: 6, card: <TenantInfoCard /> },\n                { card: <ClaimDescriptionCard /> },\n                { xs: 6, card: <QuotingBuilderCard claim={claim} optionData={optionData} /> },\n                { xs: 6, card: <QuotingRestorerCard claim={claim} optionData={optionData} /> },\n              ].map(({ xs = 12, card }: any) => (\n                <Grid item xs={xs}>\n                  {card}\n                </Grid>\n              ))}\n            </Grid>\n          )}\n        />\n      </Form>\n    </Formik>\n  )\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M19 3h-4.18C14.4 1.84 13.3 1 12 1c-1.3 0-2.4.84-2.82 2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 0c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zm0 4c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H6v-1.4c0-2 4-3.1 6-3.1s6 1.1 6 3.1V19z\"\n}), 'AssignmentInd');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zm0 4l-8 5-8-5V6l8 5 8-5v2z\"\n}), 'Email');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"\n}), 'Done');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm-1 4l6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2h7zm-1 7h5.5L14 6.5V12z\"\n}), 'FileCopy');\n\nexports.default = _default;"],"sourceRoot":""}