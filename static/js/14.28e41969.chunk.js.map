{"version":3,"sources":["components/Formik/SearchField/index.tsx","../node_modules/@material-ui/icons/Search.js"],"names":["SearchField","name","startAdornment","InputProps","endAdornment","required","disabled","props","isSubmitting","useFormikContext","useField","field","helpers","isDisabled","React","useState","value","setValue","setFormikValue","onChange","e","target","onKeyPress","key","position","onClick","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d"],"mappings":"kNAgEeA,UAjDuC,SAAC,GAOhD,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,eACAC,GAII,EALYC,aAKZ,EAJJD,YACAE,EAGI,EAHJA,SAAUC,EAGN,EAHMA,SAEPC,EACC,2FACIC,EAAiBC,cAAjBD,aADJ,EAEsBE,YAAST,GAF/B,mBAEGU,EAFH,KAEWC,EAFX,KAGEC,EAAaL,GAAgBF,EAH/B,EAKsBQ,IAAMC,SAASJ,EAAMK,OAL3C,mBAKGA,EALH,KAKUC,EALV,KAMEC,EAAiB,SAACF,GACtBJ,EAAQK,SAASD,IAGnB,OACE,kBAAC,IAAD,iBAAeT,EAAf,CACES,MAAOA,EACPG,SAAU,SAAAC,GAAC,OAAIH,EAASG,EAAEC,OAAOL,QACjCM,WAAY,SAAAF,GACI,UAAVA,EAAEG,KAAiBL,EAAeF,IAGxCV,SAAUA,EACVD,UAAUQ,GAAqBR,EAC/BF,WAAU,eACLA,EADK,CAERD,eAAiBA,EACf,kBAAC,IAAD,CAAgBsB,SAAS,SACtBtB,GAF6B,KAKlCE,aACE,kBAAC,IAAD,CAAgBoB,SAAS,OACvB,kBAAC,IAAD,CAAYC,QAAS,kBAAMP,EAAeF,KACxC,kBAAC,IAAD,e,iCClDd,IAAIU,EAAyBC,EAAQ,KAErCC,OAAOC,eAAeC,EAAS,aAAc,CAC3Cd,OAAO,IAETc,EAAQC,aAAU,EAElB,IAAIC,EAASN,EAAuBC,EAAQ,IAIxCM,GAAW,EAFMP,EAAuBC,EAAQ,MAElBI,SAASC,EAAOD,QAAQG,cAAc,OAAQ,CAC9EC,EAAG,+OACD,UAEJL,EAAQC,QAAUE","file":"static/js/14.28e41969.chunk.js","sourcesContent":["import React from 'react'\n\nimport TextField, { TextFieldProps } from '@material-ui/core/TextField'\nimport { useField, useFormikContext } from 'formik'\nimport { InputAdornment, IconButton } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\n\nexport type FormikSearchFieldProps = TextFieldProps & {\n  name: string\n  startAdornment?: React.ReactElement\n  endAdornment?: React.ReactElement\n\n  // validate?: (value: any) => string | null | undefined\n}\n\nconst SearchField: React.FC<FormikSearchFieldProps> = ({\n  name,\n  startAdornment, endAdornment,\n  InputProps,\n  required, disabled,\n  // validate,\n  ...props\n}) => {\n  const { isSubmitting } = useFormikContext()\n  const [field,, helpers] = useField(name)\n  const isDisabled = isSubmitting || disabled\n\n  const [value, setValue] = React.useState(field.value)\n  const setFormikValue = (value: any) => {\n    helpers.setValue(value)\n  }\n\n  return (\n    <TextField {...props}\n      value={value}\n      onChange={e => setValue(e.target.value)}\n      onKeyPress={e => {\n        if (e.key === 'Enter') setFormikValue(value)\n      }}\n\n      disabled={disabled}\n      required={isDisabled ? false : required}\n      InputProps={{\n        ...InputProps,\n        startAdornment: !startAdornment ? null : (\n          <InputAdornment position='start'>\n            {startAdornment}\n          </InputAdornment>\n        ),\n        endAdornment: (\n          <InputAdornment position='end'>\n            <IconButton onClick={() => setFormikValue(value)}>\n              <SearchIcon />\n            </IconButton>\n          </InputAdornment>\n        )\n      }}\n      // validate={(value: any) => {\n      //   if (!isDisabled && required && !value) return 'Required!'\n      //   if (validate) return validate(value)\n      // }}\n    />\n  )\n}\nexport default SearchField","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\n\nexports.default = _default;"],"sourceRoot":""}