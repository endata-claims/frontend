{"version":3,"sources":["components/Formik/CheckboxGroupField/index.tsx","../node_modules/@material-ui/core/esm/FormControl/FormControlContext.js","../node_modules/@material-ui/core/esm/FormControl/useFormControl.js","../node_modules/@material-ui/core/esm/internal/svg-icons/createSvgIcon.js","../node_modules/@material-ui/core/esm/FormControl/formControlState.js","../node_modules/@material-ui/core/esm/utils/useControlled.js","../node_modules/@material-ui/core/esm/InputBase/utils.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/FormControl/FormControl.js","../node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js","../node_modules/@material-ui/core/esm/FormLabel/FormLabel.js","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBoxOutlineBlank.js","../node_modules/@material-ui/core/esm/internal/svg-icons/CheckBox.js","../node_modules/@material-ui/core/esm/internal/svg-icons/IndeterminateCheckBox.js","../node_modules/@material-ui/core/esm/Checkbox/Checkbox.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js"],"names":["CheckboxGroupField","name","label","options","disabled","readOnly","display","color","maxHeight","classes","useStyles","isSubmitting","useFormikContext","useField","field","meta","setValue","error","touched","isError","Boolean","fieldValue","value","fieldValueString","JSON","stringify","optionsString","currentState","React","useMemo","map","id","includes","style","overflow","component","className","root","row","key","control","checked","onChange","newFieldValue","s","filter","handleChange","helperText","String","makeStyles","width","alignItems","justifyContent","transform","switch","marginLeft","marginRight","FormControlContext","createContext","useFormControl","useContext","createSvgIcon","path","displayName","Component","memo","forwardRef","props","ref","createElement","SvgIcon","_extends","muiName","formControlState","_ref","states","muiFormControl","reduce","acc","state","useControlled","controlled","defaultProp","default","isControlled","useRef","undefined","current","_React$useState","useState","valueState","useCallback","newValue","hasValue","Array","isArray","length","isFilled","obj","SSR","arguments","defaultValue","isAdornedStart","startAdornment","SwitchBase","autoFocus","checkedProp","checkedIcon","defaultChecked","disabledProp","icon","inputProps","inputRef","onBlur","onFocus","required","tabIndex","type","other","_objectWithoutProperties","_useControlled","_useControlled2","_slicedToArray","setCheckedState","hasLabelFor","IconButton","clsx","role","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","height","top","left","margin","zIndex","FormControl","children","_props$color","_props$component","_props$disabled","_props$error","_props$fullWidth","fullWidth","_props$hiddenLabel","hiddenLabel","_props$margin","_props$required","size","_props$variant","variant","initialAdornedStart","Children","forEach","child","isMuiElement","adornedStart","setAdornedStart","_React$useState2","initialFilled","filled","setFilled","_React$useState3","focused","setFocused","onFilled","childContext","onEmpty","registerEffect","Provider","concat","capitalize","flexDirection","minWidth","border","verticalAlign","marginNormal","marginTop","marginBottom","marginDense","FormHelperText","fcs","contained","dangerouslySetInnerHTML","__html","theme","palette","text","secondary","typography","caption","textAlign","main","FormLabel","asterisk","body1","lineHeight","primary","colorSecondary","FormGroup","_props$row","flexWrap","d","defaultCheckedIcon","CheckBoxIcon","defaultIcon","CheckBoxOutlineBlankIcon","defaultIndeterminateIcon","IndeterminateCheckBoxIcon","Checkbox","_props$checkedIcon","_props$icon","_props$indeterminate","indeterminate","_props$indeterminateI","indeterminateIcon","_props$size","cloneElement","fontSize","colorPrimary","backgroundColor","fade","action","hoverOpacity","FormControlLabel","_props$labelPlacement","labelPlacement","controlProps","Typography","WebkitTapHighlightColor","labelPlacementStart","labelPlacementTop","labelPlacementBottom"],"mappings":"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","file":"static/js/58.b736e2ac.chunk.js","sourcesContent":["import React from 'react'\nimport { FormControl, makeStyles, FormGroup, FormLabel, FormHelperText, FormControlLabel, Checkbox } from '@material-ui/core'\nimport { useField, useFormikContext } from 'formik'\n\nexport type CheckboxGroupFieldProps = {\n  name: string\n  label?: string\n  options?: Option[] | null\n  disabled?: boolean\n  readOnly?: boolean\n\n  display?: 'grid' | 'flex'\n  color?: 'primary' | 'secondary' | 'default'\n  maxHeight?: string\n}\ntype Option = {\n  label?: string\n  value: string\n}\nconst CheckboxGroupField: React.FC<CheckboxGroupFieldProps> = ({\n  name, label,\n  options,\n  disabled = false, readOnly = false,\n  display = 'grid', color = 'primary',\n  maxHeight = '100%',\n}) => {\n  const classes = useStyles()\n\n  const { isSubmitting } = useFormikContext()\n  const [field, meta, { setValue }] = useField(name)\n\n  const { error, touched } = meta\n  const isError = Boolean(touched && error)\n\n  const fieldValue = field.value\n  const fieldValueString = JSON.stringify(fieldValue)\n  const optionsString = JSON.stringify(options)\n  const currentState: any = React.useMemo(\n    () => options?.map(({ label, value }) => ({ label, id: value, value: fieldValue.includes(value) })),\n    // TODO\n    // eslint-disable-next-line\n    [fieldValueString, optionsString]\n  )\n\n  const handleChange = (value: any) => {\n    const newState = currentState.map((s: any) => {\n      if (s.id === value) return { ...s, value: !s.value}\n      return s\n    })\n    const newFieldValue = newState.filter(({ value }: any) => value).map(({ id }: any) => id)\n    setValue(newFieldValue)\n  }\n\n  return (\n    <div style={{ maxHeight, overflow: 'auto' }}>\n      <FormControl component='fieldset' className={classes.root} error={isError} disabled={isSubmitting || disabled || readOnly}>\n        <FormLabel component='legend' className={classes.label}>\n          {label}\n        </FormLabel>\n        <FormGroup row className={classes.root} style={{ display: display }}>\n          {options?.map(({ label, value }) => (\n            <FormControlLabel\n              key={value}\n              label={label}\n              control={(\n                <Checkbox\n                  {...field}\n                  value={value}\n                  checked={fieldValue.includes(value)}\n                  onChange={() => handleChange(value)}\n                  disabled={isSubmitting || disabled || readOnly}\n                  color={color}\n                />\n              )}\n            />\n          ))}\n        </FormGroup>\n        {isError && (\n          <FormHelperText className={classes.helperText}>\n            {String(error)}\n          </FormHelperText>\n        )}\n      </FormControl>\n    </div>\n  )\n}\nexport default CheckboxGroupField\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    // display: 'grid',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    transform: 'scale(0.75)'\n  },\n  switch: {\n    marginLeft: 'calc(50% - 31px)'\n  },\n  helperText: {\n    marginLeft: 14,\n    marginRight: 14\n  }\n})","import React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","import React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../../SvgIcon';\nexport default function createSvgIcon(path, displayName) {\n  var Component = React.memo(React.forwardRef(function (props, ref) {\n    return React.createElement(SvgIcon, _extends({}, props, {\n      ref: ref\n    }), path);\n  }));\n\n  if (process.env.NODE_ENV !== 'production') {\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return Component;\n}","export default function formControlState(_ref) {\n  var props = _ref.props,\n      states = _ref.states,\n      muiFormControl = _ref.muiFormControl;\n  return states.reduce(function (acc, state) {\n    acc[state] = props[state];\n\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n\n    return acc;\n  }, {});\n}","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing \".concat(isControlled ? 'a ' : 'an un', \"controlled \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default value of an uncontrolled \".concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nexport function hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n} // Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\n\nexport function isFilled(obj) {\n  var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n} // Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\n\nexport function isAdornedStart(obj) {\n  return obj.startAdornment;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    zIndex: 0,\n    // Fix blur label text issue\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️Only one input can be used within a FormControl.\n */\n\nvar FormControl = React.forwardRef(function FormControl(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$hiddenLabel = props.hiddenLabel,\n      hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      size = props.size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"]);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      adornedStart = _React$useState[0],\n      setAdornedStart = _React$useState[1];\n\n  var _React$useState2 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      filled = _React$useState2[0],\n      setFilled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  var registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var registeredInput = React.useRef(false);\n\n    registerEffect = function registerEffect() {\n      if (registeredInput.current) {\n        console.error(['Material-UI: there are multiple InputBase components inside a FormControl.', 'This is not supported. It might cause infinite rendering loops.', 'Only use one InputBase.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return function () {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  var onFilled = React.useCallback(function () {\n    setFilled(true);\n  }, []);\n  var onEmpty = React.useCallback(function () {\n    setFilled(false);\n  }, []);\n  var childContext = {\n    adornedStart: adornedStart,\n    setAdornedStart: setAdornedStart,\n    color: color,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    margin: (size === 'small' ? 'dense' : undefined) || margin,\n    onBlur: function onBlur() {\n      setFocused(false);\n    },\n    onEmpty: onEmpty,\n    onFilled: onFilled,\n    onFocus: function onFocus() {\n      setFocused(true);\n    },\n    registerEffect: registerEffect,\n    required: required,\n    variant: variant\n  };\n  return React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\n  /**\n   * The contents of the form control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['none', 'dense', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.caption, {\n      textAlign: 'left',\n      marginTop: 3,\n      margin: 0,\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n    contained: {\n      marginLeft: 14,\n      marginRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {}\n  };\n};\nvar FormHelperText = React.forwardRef(function FormHelperText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'p' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      margin = props.margin,\n      required = props.required,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), children === ' ' ? // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : children);\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes = {\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.body1, {\n      lineHeight: 1,\n      padding: 0,\n      '&$focused': {\n        color: theme.palette.primary.main\n      },\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Styles applied to the root element if the color is secondary. */\n    colorSecondary: {\n      '&$focused': {\n        color: theme.palette.secondary.main\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {},\n\n    /* Styles applied to the asterisk element. */\n    asterisk: {\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }\n  };\n};\nvar FormLabel = React.forwardRef(function FormLabel(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'label' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      required = props.required,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(fcs.color || 'primary'))], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required),\n    ref: ref\n  }, other), children, fcs.required && React.createElement(\"span\", {\n    className: clsx(classes.asterisk, fcs.error && classes.error)\n  }, \"\\u2009\", '*'));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormLabel'\n})(FormLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z\"\n}), 'CheckBoxOutlineBlank');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.11 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm-9 14l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckBox');","import React from 'react';\nimport createSvgIcon from './createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-2 10H7v-2h10v2z\"\n}), 'IndeterminateCheckBox');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport CheckBoxOutlineBlankIcon from '../internal/svg-icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '../internal/svg-icons/CheckBox';\nimport { fade } from '../styles/colorManipulator';\nimport IndeterminateCheckBoxIcon from '../internal/svg-icons/IndeterminateCheckBox';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `indeterminate={true}`. */\n    indeterminate: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = React.createElement(CheckBoxIcon, null);\nvar defaultIcon = React.createElement(CheckBoxOutlineBlankIcon, null);\nvar defaultIndeterminateIcon = React.createElement(IndeterminateCheckBoxIcon, null);\nvar Checkbox = React.forwardRef(function Checkbox(props, ref) {\n  var _props$checkedIcon = props.checkedIcon,\n      checkedIcon = _props$checkedIcon === void 0 ? defaultCheckedIcon : _props$checkedIcon,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$icon = props.icon,\n      icon = _props$icon === void 0 ? defaultIcon : _props$icon,\n      _props$indeterminate = props.indeterminate,\n      indeterminate = _props$indeterminate === void 0 ? false : _props$indeterminate,\n      _props$indeterminateI = props.indeterminateIcon,\n      indeterminateIcon = _props$indeterminateI === void 0 ? defaultIndeterminateIcon : _props$indeterminateI,\n      inputProps = props.inputProps,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checkedIcon\", \"classes\", \"color\", \"icon\", \"indeterminate\", \"indeterminateIcon\", \"inputProps\", \"size\"]);\n\n  return React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))], indeterminate && classes.indeterminate),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    color: color,\n    inputProps: _extends({\n      'data-indeterminate': indeterminate\n    }, inputProps),\n    icon: React.cloneElement(indeterminate ? indeterminateIcon : icon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: React.cloneElement(indeterminate ? indeterminateIcon : checkedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Checkbox.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * If `true`, the checkbox will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the component appears indeterminate.\n   * This does not set the native input element to indeterminate due\n   * to inconsistent behavior across browsers.\n   * However, we set a `data-indeterminate` attribute on the input.\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is indeterminate.\n   */\n  indeterminateIcon: PropTypes.node,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the checkbox.\n   * `small` is equivalent to the dense checkbox styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCheckbox'\n})(Checkbox);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), React.cloneElement(control, controlProps), React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['end', 'start', 'top', 'bottom']),\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);"],"sourceRoot":""}