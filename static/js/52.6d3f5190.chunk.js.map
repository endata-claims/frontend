{"version":3,"sources":["components/Paper/index.tsx","components/Formik/EditorField/index.tsx","pages/app/Claims/ClaimDetails/tabs/JobInfo/renderField.tsx","pages/app/Claims/ClaimDetails/tabs/JobInfo/ClaimDescriptionCard.tsx"],"names":["Paper","title","children","loading","props","classes","useStyles","className","paperTitle","paperContent","style","height","width","display","alignItems","justifyContent","makeStyles","theme","mixins","gutters","background","palette","primary","main","color","contrastText","borderRadius","paddingTop","spacing","paddingBottom","fontSize","fontWeight","name","label","placeholder","disabled","isSubmitting","useFormikContext","useField","field","meta","helpers","error","touched","isError","Boolean","initialValue","value","RichTextEditor","createValueFromString","createEmptyValue","React","useState","setValue","id","toolbarConfig","INLINE_STYLE_BUTTONS","BLOCK_TYPE_DROPDOWN","BLOCK_TYPE_BUTTONS","onChange","toString","setTouched","marginLeft","marginRight","unMountOn","xs","component","Comp","TextField","item","key","variant","fullWidth","container","EditorField","map","renderField"],"mappings":"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","file":"static/js/52.6d3f5190.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  Paper as MuiPaper,\n  PaperProps as MuiPaperProps,\n  makeStyles,\n  CircularProgress,\n} from '@material-ui/core'\n\ninterface PaperProps extends MuiPaperProps {\n  title?: any\n  loading?: boolean\n}\nconst Paper: React.FC<PaperProps> = ({ title, children, loading, ...props }) => {\n  const classes = useStyles({})\n\n  return (\n    <>\n      {title &&\n        <div className={classes.paperTitle}>\n          {title}\n        </div>\n      }\n      <MuiPaper className={classes.paperContent} {...props}>\n        {loading && (\n          <div style={{ height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n            <CircularProgress />\n          </div>\n        )}\n        {!loading && children}\n      </MuiPaper>\n    </>\n  )\n}\nexport default Paper\n\nconst useStyles = makeStyles(theme => ({\n  paperTitle: {\n    ...theme.mixins.gutters(),\n    background: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    borderRadius: '8px 8px 0 0',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    fontSize: '1rem',\n    fontWeight: 800\n  },\n  paperContent: {\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  }\n}))","import React from 'react'\n\nimport { useField, useFormikContext } from 'formik'\nimport RichTextEditor from 'react-rte'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\n\nexport default ({ name, label, placeholder, disabled, ...props }: any) => {\n  const { isSubmitting } = useFormikContext()\n\n  const [field, meta, helpers] = useField(name)\n  const { error, touched } = meta\n  const isError = Boolean(touched && error)\n\n  const initialValue = field.value\n    ? RichTextEditor.createValueFromString(field.value, 'html')\n    : RichTextEditor.createEmptyValue()\n  const [value, setValue] = React.useState<any>(initialValue)\n\n  return (\n    <FormControl error={isError} style={{ width: '100%' }} id={field.name}>\n      <RichTextEditor\n        {...props}\n        disabled={disabled || isSubmitting}\n        placeholder={placeholder || label}\n        toolbarConfig={{\n          display: [\n            'INLINE_STYLE_BUTTONS',\n            'BLOCK_TYPE_BUTTONS',\n            'BLOCK_TYPE_DROPDOWN',\n            'HISTORY_BUTTONS'\n          ],\n          INLINE_STYLE_BUTTONS: [\n            { label: 'Bold', style: 'BOLD', className: 'custom-css-class' },\n            { label: 'Italic', style: 'ITALIC' },\n            { label: 'Underline', style: 'UNDERLINE' }\n          ],\n          BLOCK_TYPE_DROPDOWN: [\n            { label: 'Normal', style: 'unstyled' },\n            { label: 'Heading Large', style: 'header-one' },\n            { label: 'Heading Medium', style: 'header-two' },\n            { label: 'Heading Small', style: 'header-three' }\n          ],\n          BLOCK_TYPE_BUTTONS: [\n            { label: 'UL', style: 'unordered-list-item' },\n            { label: 'OL', style: 'ordered-list-item' }\n          ]\n        }}\n        value={value}\n        onChange={(value: any) => {\n          setValue(value)\n          helpers.setValue(value.toString('html'))\n          helpers.setTouched(true)\n        }}\n      />\n      {isError && (\n        <FormHelperText style={{ marginLeft: 14, marginRight: 14 }}>\n          {error}\n        </FormHelperText>\n      )}\n    </FormControl>\n  )\n}","import React from 'react'\nimport { Grid } from '@material-ui/core'\nimport TextField from 'components/Formik/TextField'\n\nexport default ({ unMountOn, xs = 3, component: Comp = TextField, ...props }: any) => (\n  <Grid item xs={xs} key={props.name}>\n    {!unMountOn && <Comp {...props} variant='outlined' fullWidth />}\n  </Grid>\n)","import React from 'react'\nimport Paper from 'components/Paper'\nimport { Grid } from '@material-ui/core'\n\nimport renderField from './renderField'\nimport EditorField from 'components/Formik/EditorField'\n\nexport default () => {\n  return (\n    <Paper title='Claim Description'>\n      <Grid container spacing={3}>\n        {[\n          {\n            xs: 12,\n            component: EditorField,\n            name: 'claimDescription',\n          },\n        ].map(renderField)}\n      </Grid>\n    </Paper>\n  )\n}"],"sourceRoot":""}