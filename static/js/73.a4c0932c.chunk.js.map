{"version":3,"sources":["components/Formik/SwitchField/index.tsx","../node_modules/@material-ui/core/esm/FormControl/FormControlContext.js","../node_modules/@material-ui/core/esm/FormControl/useFormControl.js","../node_modules/@material-ui/core/esm/FormControl/formControlState.js","../node_modules/@material-ui/core/esm/utils/useControlled.js","../node_modules/@material-ui/core/esm/InputBase/utils.js","../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../node_modules/@material-ui/core/esm/FormControl/FormControl.js","../node_modules/@material-ui/core/esm/FormHelperText/FormHelperText.js","../node_modules/@material-ui/core/esm/FormLabel/FormLabel.js","../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../node_modules/@material-ui/core/esm/Switch/Switch.js"],"names":["FormikSwitch","label","onLabel","offLabel","disabled","readOnly","props","fullWidth","isSubmitting","useFormikContext","classes","useStyles","useField","name","field","meta","helpers","error","touched","isError","Boolean","component","className","root","row","labelPlacement","value","control","color","checked","onClick","e","setValue","helperText","String","makeStyles","width","display","alignItems","justifyContent","transform","switch","marginLeft","marginRight","FormControlContext","React","createContext","useFormControl","useContext","formControlState","_ref","states","muiFormControl","reduce","acc","state","useControlled","controlled","defaultProp","default","isControlled","useRef","undefined","current","_React$useState","useState","valueState","useCallback","newValue","hasValue","Array","isArray","length","isFilled","obj","SSR","arguments","defaultValue","isAdornedStart","startAdornment","SwitchBase","forwardRef","ref","autoFocus","checkedProp","checkedIcon","defaultChecked","disabledProp","icon","id","inputProps","inputRef","onBlur","onChange","onFocus","required","tabIndex","type","other","_objectWithoutProperties","_useControlled","_useControlled2","_slicedToArray","setCheckedState","hasLabelFor","createElement","IconButton","_extends","clsx","role","event","input","newChecked","target","withStyles","padding","cursor","position","opacity","height","top","left","margin","zIndex","FormControl","children","_props$color","_props$component","Component","_props$disabled","_props$error","_props$fullWidth","_props$hiddenLabel","hiddenLabel","_props$margin","_props$required","size","_props$variant","variant","initialAdornedStart","Children","forEach","child","isMuiElement","adornedStart","setAdornedStart","_React$useState2","initialFilled","filled","setFilled","_React$useState3","focused","setFocused","onFilled","childContext","onEmpty","registerEffect","Provider","concat","capitalize","flexDirection","minWidth","border","verticalAlign","marginNormal","marginTop","marginBottom","marginDense","FormHelperText","fcs","contained","dangerouslySetInnerHTML","__html","theme","palette","text","secondary","typography","caption","textAlign","main","FormLabel","asterisk","body1","lineHeight","primary","colorSecondary","FormGroup","_props$row","flexWrap","FormControlLabel","_props$labelPlacement","controlProps","key","cloneElement","Typography","WebkitTapHighlightColor","labelPlacementStart","labelPlacementTop","labelPlacementBottom","Switch","_props$edge","edge","_props$size","thumb","edgeStart","edgeEnd","switchBase","track","overflow","boxSizing","flexShrink","grey","transition","transitions","create","duration","shortest","colorPrimary","backgroundColor","fade","action","hoverOpacity","common","black","white","sizeSmall","boxShadow","shadows","borderRadius"],"mappings":"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","file":"static/js/73.a4c0932c.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  Switch, SwitchProps,\n  makeStyles,\n  FormControl, FormLabel, FormGroup, FormControlLabel, FormHelperText\n} from '@material-ui/core'\nimport { useField, useFormikContext } from 'formik'\n\ntype FormikSwitchProps = SwitchProps & {\n  name: string\n  label?: string\n\n  onLabel?: string\n  offLabel?: string\n  fullWidth?: boolean\n\n  readOnly?: boolean\n}\nconst FormikSwitch: React.FC<FormikSwitchProps> = ({ label, onLabel = 'Yes', offLabel = 'No', disabled = false, readOnly = false, fullWidth = true, ...props }) => {\n  const { isSubmitting } = useFormikContext()\n\n  const classes = useStyles()\n  const [field, meta, helpers] = useField(props.name)\n  const { error, touched } = meta\n  const isError = Boolean(touched && error)\n\n  return (\n    <FormControl component='fieldset' className={classes.root} error={isError}>\n      <FormLabel component='legend' className={classes.label}>\n        {label}\n      </FormLabel>\n      <FormGroup row className={classes.root}>\n        <FormControlLabel\n          labelPlacement='end'\n          className={classes.root}\n          label={field.value ? onLabel : offLabel}\n          control={(\n            <Switch\n              color='primary'\n              {...props}\n              disabled={isSubmitting || disabled || readOnly}\n              checked={field.value}\n              onClick={e => helpers.setValue(!field.value)}\n            />\n          )}\n        />\n      </FormGroup>\n      {isError && (\n        <FormHelperText className={classes.helperText}>\n          {String(error)}\n        </FormHelperText>\n      )}\n    </FormControl>\n  )\n}\nexport default FormikSwitch\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    transform: 'scale(0.75)'\n  },\n  switch: {\n    marginLeft: 'calc(50% - 31px)'\n  },\n  helperText: {\n    marginLeft: 14,\n    marginRight: 14\n  }\n})","import React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar FormControlContext = React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport function useFormControl() {\n  return React.useContext(FormControlContext);\n}\nexport default FormControlContext;","import React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","export default function formControlState(_ref) {\n  var props = _ref.props,\n      states = _ref.states,\n      muiFormControl = _ref.muiFormControl;\n  return states.reduce(function (acc, state) {\n    acc[state] = props[state];\n\n    if (muiFormControl) {\n      if (typeof props[state] === 'undefined') {\n        acc[state] = muiFormControl[state];\n      }\n    }\n\n    return acc;\n  }, {});\n}","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport React from 'react';\nexport default function useControlled(_ref) {\n  var controlled = _ref.controlled,\n      defaultProp = _ref.default,\n      name = _ref.name;\n\n  var _React$useRef = React.useRef(controlled !== undefined),\n      isControlled = _React$useRef.current;\n\n  var _React$useState = React.useState(defaultProp),\n      valueState = _React$useState[0],\n      setValue = _React$useState[1];\n\n  var value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(function () {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([\"Material-UI: A component is changing \".concat(isControlled ? 'a ' : 'an un', \"controlled \").concat(name, \" to be \").concat(isControlled ? 'un' : '', \"controlled.\"), 'Elements should not switch from uncontrolled to controlled (or vice versa).', \"Decide between using a controlled or uncontrolled \".concat(name, \" \") + 'element for the lifetime of the component.', 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [controlled]);\n\n    var _React$useRef2 = React.useRef(defaultProp),\n        defaultValue = _React$useRef2.current;\n\n    React.useEffect(function () {\n      if (defaultValue !== defaultProp) {\n        console.error([\"Material-UI: A component is changing the default value of an uncontrolled \".concat(name, \" after being initialized. \") + \"To suppress this warning opt to use a controlled \".concat(name, \".\")].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  var setValueIfUncontrolled = React.useCallback(function (newValue) {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","// Supports determination of isControlled().\n// Controlled input accepts its current value as a prop.\n//\n// @see https://facebook.github.io/react/docs/forms.html#controlled-components\n// @param value\n// @returns {boolean} true if string (including '') or number (including zero)\nexport function hasValue(value) {\n  return value != null && !(Array.isArray(value) && value.length === 0);\n} // Determine if field is empty or filled.\n// Response determines if label is presented above field or as placeholder.\n//\n// @param obj\n// @param SSR\n// @returns {boolean} False when not present or empty string.\n//                    True when any number or string with length.\n\nexport function isFilled(obj) {\n  var SSR = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return obj && (hasValue(obj.value) && obj.value !== '' || SSR && hasValue(obj.defaultValue) && obj.defaultValue !== '');\n} // Determine if an Input is adorned on start.\n// It's corresponding to the left with LTR.\n//\n// @param obj\n// @returns {boolean} False when no adornments.\n//                    True when adorned at the start.\n\nexport function isAdornedStart(obj) {\n  return obj.startAdornment;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    zIndex: 0,\n    // Fix blur label text issue\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️Only one input can be used within a FormControl.\n */\n\nvar FormControl = React.forwardRef(function FormControl(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$hiddenLabel = props.hiddenLabel,\n      hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      size = props.size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"]);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      adornedStart = _React$useState[0],\n      setAdornedStart = _React$useState[1];\n\n  var _React$useState2 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      filled = _React$useState2[0],\n      setFilled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  var registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var registeredInput = React.useRef(false);\n\n    registerEffect = function registerEffect() {\n      if (registeredInput.current) {\n        console.error(['Material-UI: there are multiple InputBase components inside a FormControl.', 'This is not supported. It might cause infinite rendering loops.', 'Only use one InputBase.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return function () {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  var onFilled = React.useCallback(function () {\n    setFilled(true);\n  }, []);\n  var onEmpty = React.useCallback(function () {\n    setFilled(false);\n  }, []);\n  var childContext = {\n    adornedStart: adornedStart,\n    setAdornedStart: setAdornedStart,\n    color: color,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    margin: (size === 'small' ? 'dense' : undefined) || margin,\n    onBlur: function onBlur() {\n      setFocused(false);\n    },\n    onEmpty: onEmpty,\n    onFilled: onFilled,\n    onFocus: function onFocus() {\n      setFocused(true);\n    },\n    registerEffect: registerEffect,\n    required: required,\n    variant: variant\n  };\n  return React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, React.createElement(Component, _extends({\n    className: clsx(classes.root, className, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\n  /**\n   * The contents of the form control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['none', 'dense', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.caption, {\n      textAlign: 'left',\n      marginTop: 3,\n      margin: 0,\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      marginTop: 4\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` or `variant=\"outlined\"`. */\n    contained: {\n      marginLeft: 14,\n      marginRight: 14\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {}\n  };\n};\nvar FormHelperText = React.forwardRef(function FormHelperText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'p' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      margin = props.margin,\n      required = props.required,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"margin\", \"required\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['variant', 'margin', 'disabled', 'error', 'filled', 'focused', 'required']\n  });\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, (fcs.variant === 'filled' || fcs.variant === 'outlined') && classes.contained, className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required, fcs.margin === 'dense' && classes.marginDense),\n    ref: ref\n  }, other), children === ' ' ? // eslint-disable-next-line react/no-danger\n  React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: '&#8203;'\n    }\n  }) : children);\n});\nprocess.env.NODE_ENV !== \"production\" ? FormHelperText.propTypes = {\n  /**\n   * The content of the component.\n   *\n   * If `' '` is provided, the component reserves one line height for displaying a future message.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, helper text should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the helper text should use focused classes key.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * If `true`, the helper text should use required classes key.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormHelperText'\n})(FormHelperText);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({\n      color: theme.palette.text.secondary\n    }, theme.typography.body1, {\n      lineHeight: 1,\n      padding: 0,\n      '&$focused': {\n        color: theme.palette.primary.main\n      },\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      },\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }),\n\n    /* Styles applied to the root element if the color is secondary. */\n    colorSecondary: {\n      '&$focused': {\n        color: theme.palette.secondary.main\n      }\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `filled={true}`. */\n    filled: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {},\n\n    /* Styles applied to the asterisk element. */\n    asterisk: {\n      '&$error': {\n        color: theme.palette.error.main\n      }\n    }\n  };\n};\nvar FormLabel = React.forwardRef(function FormLabel(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      color = props.color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'label' : _props$component,\n      disabled = props.disabled,\n      error = props.error,\n      filled = props.filled,\n      focused = props.focused,\n      required = props.required,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"]);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n  return React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[\"color\".concat(capitalize(fcs.color || 'primary'))], className, fcs.disabled && classes.disabled, fcs.error && classes.error, fcs.filled && classes.filled, fcs.focused && classes.focused, fcs.required && classes.required),\n    ref: ref\n  }, other), children, fcs.required && React.createElement(\"span\", {\n    className: clsx(classes.asterisk, fcs.error && classes.error)\n  }, \"\\u2009\", '*'));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormLabel'\n})(FormLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), React.cloneElement(control, controlProps), React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['end', 'start', 'top', 'bottom']),\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle' // For correct alignment with the text.\n\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'default']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['start', 'end', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium']),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string,\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);"],"sourceRoot":""}