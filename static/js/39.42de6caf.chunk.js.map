{"version":3,"sources":["components/Paper/index.tsx","components/Formik/CheckboxGroupField/index.tsx","pages/app/Claims/ClaimDetails/tabs/JobInfo/renderField.tsx","pages/app/Claims/ClaimDetails/tabs/JobInfo/QuotingBuilderCard.tsx"],"names":["Paper","title","children","loading","props","classes","useStyles","className","paperTitle","paperContent","style","height","width","display","alignItems","justifyContent","makeStyles","theme","mixins","gutters","background","palette","primary","main","color","contrastText","borderRadius","paddingTop","spacing","paddingBottom","fontSize","fontWeight","CheckboxGroupField","name","label","options","disabled","readOnly","maxHeight","isSubmitting","useFormikContext","useField","field","meta","setValue","error","touched","isError","Boolean","fieldValue","value","fieldValueString","JSON","stringify","optionsString","currentState","React","useMemo","map","id","includes","overflow","component","root","row","key","control","checked","onChange","newFieldValue","s","filter","handleChange","helperText","String","transform","switch","marginLeft","marginRight","unMountOn","xs","Comp","TextField","item","variant","fullWidth","gql","optionData","claim","quotingBuilders","option","building","scopingSupplier","companyId","container","renderField"],"mappings":"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","file":"static/js/39.42de6caf.chunk.js","sourcesContent":["import React from 'react'\nimport {\n  Paper as MuiPaper,\n  PaperProps as MuiPaperProps,\n  makeStyles,\n  CircularProgress,\n} from '@material-ui/core'\n\ninterface PaperProps extends MuiPaperProps {\n  title?: any\n  loading?: boolean\n}\nconst Paper: React.FC<PaperProps> = ({ title, children, loading, ...props }) => {\n  const classes = useStyles({})\n\n  return (\n    <>\n      {title &&\n        <div className={classes.paperTitle}>\n          {title}\n        </div>\n      }\n      <MuiPaper className={classes.paperContent} {...props}>\n        {loading && (\n          <div style={{ height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n            <CircularProgress />\n          </div>\n        )}\n        {!loading && children}\n      </MuiPaper>\n    </>\n  )\n}\nexport default Paper\n\nconst useStyles = makeStyles(theme => ({\n  paperTitle: {\n    ...theme.mixins.gutters(),\n    background: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    borderRadius: '8px 8px 0 0',\n    paddingTop: theme.spacing(1),\n    paddingBottom: theme.spacing(1),\n    fontSize: '1rem',\n    fontWeight: 800\n  },\n  paperContent: {\n    ...theme.mixins.gutters(),\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2)\n  }\n}))","import React from 'react'\nimport { FormControl, makeStyles, FormGroup, FormLabel, FormHelperText, FormControlLabel, Checkbox } from '@material-ui/core'\nimport { useField, useFormikContext } from 'formik'\n\nexport type CheckboxGroupFieldProps = {\n  name: string\n  label?: string\n  options?: Option[] | null\n  disabled?: boolean\n  readOnly?: boolean\n\n  display?: 'grid' | 'flex'\n  color?: 'primary' | 'secondary' | 'default'\n  maxHeight?: string\n}\ntype Option = {\n  label?: string\n  value: string\n}\nconst CheckboxGroupField: React.FC<CheckboxGroupFieldProps> = ({\n  name, label,\n  options,\n  disabled = false, readOnly = false,\n  display = 'grid', color = 'primary',\n  maxHeight = '100%',\n}) => {\n  const classes = useStyles()\n\n  const { isSubmitting } = useFormikContext()\n  const [field, meta, { setValue }] = useField(name)\n\n  const { error, touched } = meta\n  const isError = Boolean(touched && error)\n\n  const fieldValue = field.value\n  const fieldValueString = JSON.stringify(fieldValue)\n  const optionsString = JSON.stringify(options)\n  const currentState: any = React.useMemo(\n    () => options?.map(({ label, value }) => ({ label, id: value, value: fieldValue.includes(value) })),\n    // TODO\n    // eslint-disable-next-line\n    [fieldValueString, optionsString]\n  )\n\n  const handleChange = (value: any) => {\n    const newState = currentState.map((s: any) => {\n      if (s.id === value) return { ...s, value: !s.value}\n      return s\n    })\n    const newFieldValue = newState.filter(({ value }: any) => value).map(({ id }: any) => id)\n    setValue(newFieldValue)\n  }\n\n  return (\n    <div style={{ maxHeight, overflow: 'auto' }}>\n      <FormControl component='fieldset' className={classes.root} error={isError} disabled={isSubmitting || disabled || readOnly}>\n        <FormLabel component='legend' className={classes.label}>\n          {label}\n        </FormLabel>\n        <FormGroup row className={classes.root} style={{ display: display }}>\n          {options?.map(({ label, value }) => (\n            <FormControlLabel\n              key={value}\n              label={label}\n              control={(\n                <Checkbox\n                  {...field}\n                  value={value}\n                  checked={fieldValue.includes(value)}\n                  onChange={() => handleChange(value)}\n                  disabled={isSubmitting || disabled || readOnly}\n                  color={color}\n                />\n              )}\n            />\n          ))}\n        </FormGroup>\n        {isError && (\n          <FormHelperText className={classes.helperText}>\n            {String(error)}\n          </FormHelperText>\n        )}\n      </FormControl>\n    </div>\n  )\n}\nexport default CheckboxGroupField\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    // display: 'grid',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    transform: 'scale(0.75)'\n  },\n  switch: {\n    marginLeft: 'calc(50% - 31px)'\n  },\n  helperText: {\n    marginLeft: 14,\n    marginRight: 14\n  }\n})","import React from 'react'\nimport { Grid } from '@material-ui/core'\nimport TextField from 'components/Formik/TextField'\n\nexport default ({ unMountOn, xs = 3, component: Comp = TextField, ...props }: any) => (\n  <Grid item xs={xs} key={props.name}>\n    {!unMountOn && <Comp {...props} variant='outlined' fullWidth />}\n  </Grid>\n)","import React from 'react'\nimport Paper from 'components/Paper'\nimport { Grid } from '@material-ui/core'\n\nimport renderField from './renderField'\nimport CheckboxGroupField from 'components/Formik/CheckboxGroupField'\n\nimport { gql } from '@apollo/client'\nimport { JobInfoQuery } from 'generated/graphql'\ngql`\n  fragment JobInfo_QuotingBuilderCardFragment on Query {\n    quotingBuilders: claimFilterOptions(where: $whereQuotingBuilder) {\n      label: name\n      value\n    }\n  }\n`\n\ntype ClaimDetailsCardProps = {\n  optionData?: JobInfoQuery\n  claim?: any\n}\nexport default ({ optionData, claim }: ClaimDetailsCardProps) => {\n  // TODO: change to strict compare !== when the api is fixed\n  // eslint-disable-next-line\n  const options = optionData?.quotingBuilders?.filter(option => option?.value != claim?.building?.scopingSupplier?.companyId)\n\n  return (\n    <Paper title='Quoting Builders'>\n      <Grid container spacing={3}>\n        {[\n          {\n            xs: 12,\n            component: CheckboxGroupField,\n            name: 'portfolios[0].quotingSupplierIds',\n            options: options,\n            maxHeight: '12rem'\n          },\n        ].map(renderField)}\n      </Grid>\n    </Paper>\n  )\n}"],"sourceRoot":""}