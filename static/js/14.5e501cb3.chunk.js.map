{"version":3,"sources":["components/Table/index.tsx","layouts/TabLayout/index.tsx","pages/app/Claims/ClaimDetails/tabs/JobNotes/JobNoteList.tsx","pages/app/Claims/ClaimDetails/components/ClaimPortfolioFilter.tsx","pages/app/Claims/ClaimDetails/tabs/JobNotes/index.tsx","components/WaterfallFilter/PortfolioFilter.tsx"],"names":["Table","columns","data","totalCount","onRowClick","onScroll","renderRowSubComponent","classes","useStyles","hiddenColumns","React","useMemo","filter","show","map","accessor","id","useTable","initialState","useExpanded","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","flatColumns","variant","className","paper","tableContainer","stickyHeader","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","tableHeaderCell","render","length","row","isExpanded","Fragment","key","onClick","tableRow","getRowProps","cells","cell","getCellProps","tableBodyCell","undefined","value","colSpan","TableWrapper","loading","loadingMore","props","loadingComponent","style","height","width","display","alignItems","justifyContent","container","position","top","bottom","left","right","zIndex","background","makeStyles","theme","padding","maxHeight","palette","primary","main","color","contrastText","spacing","textAlign","minWidth","grey","flexWrap","TabLayout","actions","body","nextStep","useClaimActions","marginTop","marginBottom","size","open","flexGrow","index","label","unMountOn","marginRight","gql","JobNoteList","Header","Cell","original","portfolio","portfolioType","logDate","mappedData","claimNotes","edges","edge","node","ClaimPortfolioFilter","setPortfolio","claimMeta","useClaimMeta","portfolios","claim","_portfolios","Filter","useState","setValue","useEffect","PortfolioFilter","claimId","skip","useJobNotesQuery","variables","first","after","where","mapJobNoteLogic","isDisabledInitialCall","isDisplayInitialCall","isDisplayApointmentMade","isDisplayChangeAppointment","awaitingInfoAction","disabled","name","isDisabled","isDisplay","Grid","item","xs","isBuilder","me","userType","isRestorer","buildingSup","claimJob","building","jobSuppliers","restorationSup","restoration","quote","progress","initialCallMade","includes","claimStatus","statusId","appointmentBooked","isQuoting","user","company","companyId","scopingSupplier","find","action","actionType","flexDirection","margin","fontSize"],"mappings":"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","file":"static/js/14.5e501cb3.chunk.js","sourcesContent":["import React from 'react'\nimport { Paper, Table as MuiTable, TableContainer, TableHead, TableRow, TableCell, TableBody, makeStyles, Typography, CircularProgress } from '@material-ui/core'\nimport { useTable, useExpanded } from 'react-table'\n\ninterface TableWrapperProps extends TableProps {\n  loading?: boolean\n  loadingMore?: boolean\n}\nconst TableWrapper: React.FC<TableWrapperProps> = ({ loading, loadingMore, data, ...props }) => {\n  const classes = useStyles({})\n  const loadingComponent = React.useMemo(() => (\n    <div style={{ height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n      <CircularProgress />\n    </div>\n  ), [])\n\n\n  if (loading) return (\n    <div className={classes.container}>\n      {loadingComponent}\n    </div>\n  )\n\n  if (!data) return null\n\n  return (\n    <div className={classes.container}>\n      {!loadingMore ? null : (\n        <div style={{ position: 'absolute', top: 33, bottom: 0, left: 0, right: 0, zIndex: 10, background: 'rgba(255, 255, 255, 0.5)' }}>\n          {loadingComponent}\n        </div>\n      )}\n      <Table {...props} data={data} />\n    </div>\n  )\n}\n\ninterface TableProps {\n  data?: any\n  columns?: any\n  totalCount?: number | null\n\n  onRowClick?: any\n  onScroll?: any\n\n  renderRowSubComponent?: any\n}\nconst Table: React.FC<TableProps> = ({\n  columns, data, totalCount,\n  onRowClick, onScroll,\n  renderRowSubComponent,\n}) => {\n  const classes = useStyles({})\n\n  const hiddenColumns = React.useMemo(() => {\n    return columns?.filter(({ show }: any) => show === false)\n      .map(({ accessor, id }: any) => id ? id : accessor)\n  }, [columns])\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n    columns: flatColumns,\n  } = useTable({\n    columns,\n    data,\n    initialState: { hiddenColumns },\n  }, useExpanded)\n\n  return (\n    <>\n      {totalCount && totalCount !== 0 ? (\n        <Typography variant='subtitle1'>\n          Found {totalCount}\n        </Typography>\n      ) : null}\n      <Paper className={classes.paper}>\n        <TableContainer className={classes.tableContainer} onScroll={onScroll}>\n          <MuiTable stickyHeader {...getTableProps()}>\n            <TableHead>\n              {headerGroups.map(headerGroup => (\n                <TableRow {...headerGroup.getHeaderGroupProps()}>\n                  {headerGroup.headers.map(column => {\n                    return (\n                      <TableCell {...column.getHeaderProps()} className={classes.tableHeaderCell}>\n                        {column.render('Header')}\n                      </TableCell>\n                    )\n                  })}\n                </TableRow>\n              ))}\n            </TableHead>\n            <TableBody {...getTableBodyProps()}>\n              {rows.length\n                ? (\n                  rows.map(row => {\n                    prepareRow(row)\n                    // @ts-ignore\n                    const { isExpanded } = row\n\n                    return (\n                      <React.Fragment key={row.id}>\n                        <TableRow onClick={onRowClick ? () => onRowClick(row) : () => { }} className={classes.tableRow} {...row.getRowProps()}>\n                          {row.cells.map(cell => {\n                            return (\n                              <TableCell {...cell.getCellProps()} className={classes.tableBodyCell}>\n                                {cell.value !== undefined ? cell.render('Cell') : '-'}\n                              </TableCell>\n                            )\n                          })}\n                        </TableRow>\n                        {isExpanded && (\n                          <TableRow>\n                            <TableCell colSpan={flatColumns.length}>\n                              {renderRowSubComponent({ row })}\n                            </TableCell>\n                          </TableRow>\n                        )}\n                      </React.Fragment>\n                    )\n                  })\n                )\n                : (\n                  <TableRow>\n                    <TableCell colSpan={flatColumns?.length ?? 4}>\n                      No item found\n                    </TableCell>\n                  </TableRow>\n                )\n              }\n            </TableBody>\n          </MuiTable>\n        </TableContainer>\n      </Paper>\n    </>\n  )\n}\n\nexport default TableWrapper\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    position: 'relative',\n    height: 'calc(100% - 28px)',\n    padding: 2\n  },\n  paper: {\n    height: '100%'\n  },\n  tableContainer: {\n    maxHeight: '100%'\n  },\n  tableHeaderCell: {\n    background: theme.palette.primary.main,\n    color: theme.palette.primary.contrastText,\n    padding: theme.spacing(0.5),\n    textAlign: 'center',\n    minWidth: 150\n  },\n  tableBodyCell: {\n    textAlign: 'center',\n    padding: theme.spacing(1),\n  },\n  tableRow: {\n    '&:nth-child(even)': {\n      background: theme.palette.grey[100],\n    },\n    '&:hover': {\n      background: theme.palette.grey[300],\n    },\n    flexWrap: 'nowrap'\n  }\n}))","import React from 'react'\nimport { CircularProgress, Paper, Button } from '@material-ui/core'\nimport { useClaimActions } from 'pages/app/Claims/ClaimDetails/actions/ClaimActionProvider'\n\ninterface TabLayoutProps {\n  loading?: boolean\n  actions: any\n  body: any\n}\nconst TabLayout: React.FC<TabLayoutProps> = ({ loading, actions, body }) => {\n  const { nextStep } = useClaimActions()\n\n  if (loading) return (\n    <div style={{ height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n      <CircularProgress />\n    </div>\n  )\n\n  return (\n    <div className='tab-layout' style={{ height: '100%', marginTop: 8 }}>\n      <Paper style={{ padding: 8, display: 'flex', marginBottom: 4 }}>\n        <Button variant='outlined' color='primary' size='large' onClick={nextStep.open}>\n          Next Step\n        </Button>\n        <div style={{ flexGrow: 1 }} />\n        {actions.map(({ label, unMountOn, ...props }: any, index: number) => {\n          if(unMountOn) return null\n\n          return (\n            <Button\n              key={index}\n              style={{ marginRight: 8 }}\n              size='large'\n              color='primary'\n              variant='outlined'\n              {...props}\n            >\n              {label}\n            </Button>\n          )\n        })}\n      </Paper>\n      {body}\n    </div>\n  )\n}\nexport default TabLayout","import React from 'react'\nimport Table from 'components/Table'\n\nimport { gql } from '@apollo/client'\nimport { JobNotesQuery } from 'generated/graphql'\nimport PortfolioIcon from 'components/PortfolioIcon'\ngql`\n  fragment JobNoteListFragment on ClaimNote {\n    portfolioType\n    logDate\n    private\n    _privacy @client\n    message\n    user {\n      userName\n      company { companyName }\n    }\n  }\n`\n\ntype JobNoteListProps = {\n  data?: JobNotesQuery\n  loading: boolean\n}\nconst JobNoteList: React.FC<JobNoteListProps> = ({ data, loading }) => {\n  const columns = React.useMemo(() => [\n    { Header: 'Date', accessor: 'logDate', Cell: ({ cell: { row: { original }}}: any) => {\n      return (\n        <div style={{ display: 'flex' }}>\n          <PortfolioIcon portfolio={original.portfolioType} />\n          {original.logDate}\n        </div>\n      )\n    }},\n    { Header: 'Company', accessor: 'user.company.companyName' },\n    { Header: 'User', accessor: 'user.userName' },\n    { Header: 'Privacy', accessor: '_privacy' },\n    { Header: 'Note', accessor: 'message' },\n  ], [])\n\n  const mappedData = data?.claimNotes?.edges?.map(edge => edge?.node)\n\n  return (\n    <Table\n      loading={loading}\n      columns={columns}\n      data={mappedData}\n    />\n  )\n}\nexport default JobNoteList","import React from 'react'\nimport PortfolioFilter, { PortfolioType } from 'components/WaterfallFilter/PortfolioFilter'\nimport { useClaimMeta } from '../ClaimMetaContext'\n\nconst ClaimPortfolioFilter = ({ setPortfolio }: any) => {\n  const claimMeta = useClaimMeta()\n  const portfolios = claimMeta?.claim?._portfolios\n  if (!portfolios) return null\n\n  return <Filter portfolios={portfolios} setPortfolio={setPortfolio} />\n}\nexport default ClaimPortfolioFilter\n\nconst Filter = ({ portfolios, setPortfolio }: any) => {\n  const [value, setValue] = React.useState<PortfolioType>(portfolios[0])\n\n  React.useEffect(() => {\n    setPortfolio(value)\n  }, [value, setPortfolio])\n\n  return <PortfolioFilter portfolios={portfolios} value={value} setValue={setValue} />\n}","import React from 'react'\n\nimport { Grid } from '@material-ui/core'\nimport ClaimPortfolioFilter from '../../components/ClaimPortfolioFilter'\nimport { gql } from '@apollo/client'\nimport { useJobNotesQuery, ClaimDetailsQuery } from 'generated/graphql'\nimport JobNoteList from './JobNoteList'\nimport TabLayout from 'layouts/TabLayout'\nimport { useClaimMeta } from '../../ClaimMetaContext'\ngql`\n  query JobNotes($where: ClaimItemFilter, $first: Int, $after: String) {\n    claimNotes(where: $where, first: $first, after: $after) {\n      edges {\n        node {\n          id\n          ...JobNoteListFragment\n        }\n      }\n    }\n  }\n  fragment JobNotesFragment on ClaimJob {\n    actions {\n      actionType\n      name\n      isDisplay\n      isDisabled\n    }\n    building {\n      progress { initialCallMade appointmentBooked }\n      claimStatus { statusId }\n      jobSuppliers { quote { id }}\n    }\n    restoration {\n      progress { initialCallMade appointmentBooked }\n      claimStatus { statusId }\n      jobSuppliers { quote { id }}\n    }\n  }\n`\n\ntype JobNotesProps = {\n  claimId?: string\n  data?: ClaimDetailsQuery\n}\nexport default ({ claimId, data: claim }: JobNotesProps) => {\n  const claimMeta = useClaimMeta()\n\n  const [portfolio, setPortfolio] = React.useState()\n\n  const skip = !claimId || !portfolio\n  // @ts-ignore\n  const { data, loading } = useJobNotesQuery({\n    variables: {\n      first: 1000,\n      after: null,\n      where: {\n        claimId,\n        portfolios: [portfolio]\n      }\n    },\n    skip\n  })\n\n  const {\n    isDisabledInitialCall, isDisplayInitialCall,\n    isDisplayApointmentMade,\n    isDisplayChangeAppointment,\n    awaitingInfoAction\n  } = mapJobNoteLogic({ claimMeta, claim })\n\n  return (\n    <TabLayout\n      actions={[\n        {\n          label: 'Initial Call Made',\n          disabled: isDisabledInitialCall,\n          unMountOn: !isDisplayInitialCall\n        },\n        {\n          label: 'Appointment Made',\n          unMountOn: !isDisplayApointmentMade\n        },\n        {\n          label: 'Change Appointment',\n          unMountOn: !isDisplayChangeAppointment\n        },\n        {\n          label: awaitingInfoAction?.name,\n          disabled: awaitingInfoAction?.isDisabled,\n          unMountOn: !awaitingInfoAction?.isDisplay\n        },\n        { label: 'New Job Note' },\n      ]}\n      body={(\n        <Grid container spacing={1} style={{ marginTop: 4 }} alignItems='flex-start'>\n          <Grid item>\n            <ClaimPortfolioFilter setPortfolio={setPortfolio} />\n          </Grid>\n          <Grid item xs>\n            <JobNoteList data={data} loading={loading || skip} />\n          </Grid>\n        </Grid>\n      )}\n    />\n  )\n}\n\nconst mapJobNoteLogic = ({ claimMeta, claim }: any) => {\n  const isBuilder = claimMeta?.me?.userType === 'Builder'\n  const isRestorer = claimMeta?.me?.userType === 'Restorer'\n  const buildingSup = claim?.claimJob?.building?.jobSuppliers\n  const restorationSup = claim?.claimJob?.restoration?.jobSuppliers\n\n  const isDisabledInitialCall =\n    (isBuilder && !(buildingSup && buildingSup[0]?.quote))\n    ||\n    (isRestorer && !(restorationSup && restorationSup[0]?.quote))\n  const isDisplayInitialCall =\n    (\n      isBuilder\n      && !claim?.claimJob?.building?.progress?.initialCallMade\n      && [11, 34].includes(claim?.claimJob?.building?.claimStatus?.statusId ?? -1)\n    )\n    ||\n    (\n      isRestorer\n      && !claim?.claimJob?.restoration?.progress?.initialCallMade\n      && [11, 34].includes(claim?.claimJob?.restoration?.claimStatus?.statusId ?? -1)\n    )\n\n  const isDisplayApointmentMade =\n    (\n      isBuilder\n      && claim?.claimJob?.building?.progress?.initialCallMade\n      && !claim.claimJob.building.progress.appointmentBooked\n    )\n    ||\n    (\n      isRestorer\n      && claim?.claimJob?.restoration?.progress?.initialCallMade\n      && !claim.claimJob.restoration?.progress.appointmentBooked\n    )\n\n  const companyId = claimMeta?.user?.company?.companyId\n  const scopingId =\n    isBuilder ? claim?.claimJob?.building?.scopingSupplier?.companyId :\n      isRestorer ? claim?.claimJob?.restoration?.scopingSupplier?.companyId :\n        ''\n  const isQuoting = companyId !== scopingId\n  const isDisplayChangeAppointment =\n    (isBuilder && !isQuoting && [1, 37].includes(claim?.claimJob?.building?.claimStatus?.statusId ?? -1))\n    ||\n    (isRestorer && !isQuoting && [1, 37].includes(claim?.claimJob?.restoration?.claimStatus?.statusId ?? -1))\n\n  const awaitingInfoAction = claim?.claimJob?.actions.find((action: any) => action?.actionType === 'CLAIM_AWAITING_INFO')\n\n  return {\n    isDisabledInitialCall, isDisplayInitialCall,\n    isDisplayApointmentMade,\n    isDisplayChangeAppointment,\n    awaitingInfoAction\n  }\n}","import React from 'react'\nimport { Paper, Button } from '@material-ui/core'\nimport PortfolioIcon from 'components/PortfolioIcon'\n\nexport type PortfolioFilterProps = {\n  portfolios: PortfolioType[]\n\n  value: PortfolioType\n  setValue: (value: PortfolioType) => void\n}\nexport type PortfolioType = 'Building' | 'Contents' | 'Restoration'\n\nconst PortfolioFilter: React.FC<PortfolioFilterProps> = ({ portfolios, value, setValue }) => {\n  return (\n    <Paper style={{ display: 'flex', flexDirection: 'column', padding: 4 }}>\n      {portfolios.map(portfolio => (\n        <Button\n          key={portfolio}\n          style={{\n            margin: 0, marginBottom: 4,\n            minWidth: 50, width: 50,\n          }}\n          variant={value === portfolio ? 'contained' : 'text'}\n          onClick={() => setValue(portfolio)}\n        >\n          <PortfolioIcon portfolio={portfolio} style={{ margin: 0, fontSize: '1.5rem' }} />\n        </Button>\n      ))}\n    </Paper>\n  )\n}\nexport default PortfolioFilter"],"sourceRoot":""}