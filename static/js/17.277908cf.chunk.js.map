{"version":3,"sources":["components/Formik/CheckboxField/index.tsx"],"names":["FormikSwitch","label","disabled","readOnly","props","classes","useStyles","isSubmitting","useFormikContext","useField","name","field","meta","helpers","error","touched","isError","Boolean","component","className","root","row","checked","value","onClick","setValue","helperText","String","makeStyles","width","display","alignItems","justifyContent","transform","marginLeft","marginRight"],"mappings":"iNA6CeA,UAhCqC,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,SAAaC,EAAY,+CACzFC,EAAUC,IAERC,EAAiBC,cAAjBD,aAHuF,EAKhEE,YAASL,EAAMM,MALiD,mBAKxFC,EALwF,KAKjFC,EALiF,KAK3EC,EAL2E,KAMvFC,EAAmBF,EAAnBE,MAAOC,EAAYH,EAAZG,QACTC,EAAUC,QAAQF,GAAWD,GAEnC,OACE,kBAAC,IAAD,CAAaI,UAAU,WAAWC,UAAWd,EAAQe,KAAMN,MAAOE,EAChEd,SAAUA,GAAYC,GAAYI,GAElC,kBAAC,IAAD,CAAWW,UAAU,SAASC,UAAWd,EAAQJ,OAC9CA,GAEH,kBAAC,IAAD,CAAWoB,KAAG,EAACF,UAAWd,EAAQe,MAChC,kBAAC,IAAD,iBACMhB,EADN,CAEEF,SAAUA,GAAYC,GAAYI,EAClCe,QAASX,EAAMY,MACfC,QAAS,kBAAMX,EAAQY,UAAUd,EAAMY,YAG1CP,GACC,kBAAC,IAAD,CAAgBG,UAAWd,EAAQqB,YAChCC,OAAOb,MAQlB,IAAMR,EAAYsB,YAAW,CAC3BR,KAAM,CACJS,MAAO,OACPC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElB/B,MAAO,CACLgC,UAAW,eAEbP,WAAY,CACVQ,WAAY,GACZC,YAAa","file":"static/js/17.277908cf.chunk.js","sourcesContent":["import React from 'react'\n\nimport {\n  Checkbox, CheckboxProps,\n  makeStyles,\n  FormControl, FormLabel, FormGroup, FormHelperText\n} from '@material-ui/core'\nimport { useField, useFormikContext } from 'formik'\n\ntype FormikCheckboxProps = CheckboxProps & {\n  name: string\n  label?: string\n}\nconst FormikSwitch: React.FC<FormikCheckboxProps> = ({ label, disabled, readOnly, ...props }) => {\n  const classes = useStyles()\n\n  const { isSubmitting } = useFormikContext()\n\n  const [field, meta, helpers] = useField(props.name)\n  const { error, touched } = meta\n  const isError = Boolean(touched && error)\n\n  return (\n    <FormControl component='fieldset' className={classes.root} error={isError}\n      disabled={disabled || readOnly || isSubmitting}\n    >\n      <FormLabel component='legend' className={classes.label}>\n        {label}\n      </FormLabel>\n      <FormGroup row className={classes.root}>\n        <Checkbox\n          {...props}\n          disabled={disabled || readOnly || isSubmitting}\n          checked={field.value}\n          onClick={() => helpers.setValue(!field.value)}\n        />\n      </FormGroup>\n      {isError && (\n        <FormHelperText className={classes.helperText}>\n          {String(error)}\n        </FormHelperText>\n      )}\n    </FormControl>\n  )\n}\nexport default FormikSwitch\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  label: {\n    transform: 'scale(0.75)'\n  },\n  helperText: {\n    marginLeft: 14,\n    marginRight: 14\n  }\n})"],"sourceRoot":""}