{"version":3,"sources":["../parser.js","../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","../useQuery.js","../useLazyQuery.js","../MutationData.js","../useMutation.js","../OperationData.js","../QueryData.js","../useBaseQuery.js","../useDeepMemo.js"],"names":["DocumentType","cache","Map","operationName","type","name","Query","Mutation","Subscription","parser","document","variables","cached","get","fragments","definitions","filter","x","kind","queries","operation","mutations","subscriptions","length","easeOut","t","value","min","max","Math","CircularProgress","React","forwardRef","props","ref","classes","className","_props$color","color","_props$disableShrink","disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","_props$variant","variant","other","_objectWithoutProperties","circleStyle","rootStyle","rootProps","circumference","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","createElement","_extends","clsx","root","capitalize","indeterminate","static","width","height","role","svg","viewBox","SIZE","circle","circleDisableShrink","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","withStyles","theme","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","flip","useQuery","query","options","useLazyQuery","_super","MutationData","_a","context","result","setResult","_this","call","this","runMutation","mutationFunctionOptions","onMutationStart","mutationId","generateNewMutationId","mutate","then","response","onMutationCompleted","catch","error","onMutationError","getOptions","onError","verifyDocumentType","mutation","mostRecentMutationId","prototype","execute","isMounted","client","refreshClient","afterExecute","unmount","bind","cleanup","optimisticResponse","update","_b","mutationContext","_c","awaitRefetchQueries","fetchPolicy","mutateOptions","mutateVariables","Object","assign","refetchQueries","loading","ignoreResults","updateResult","undefined","data","called","onCompleted","errors","ApolloError","graphQLErrors","isMostRecentMutation","previousResult","useMutation","useContext","useState","useRef","useEffect","updatedOptions","mutationDataRef","mutationData","current","setOptions","OperationData","previousOptions","newOptions","storePrevious","isNew","QueryData","forceUpdate","previousData","currentObservable","runLazy","runLazyQuery","lazyOptions","getQueryResult","observableQueryFields","skip","currentResult","getCurrentResult","partial","networkStatus","getLastResult","partialRefetch","keys","refetch","obsRefetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","removeQuerySubscription","updateObservableQuery","startQuerySubscription","getExecuteSsrResult","getExecuteResult","executeLazy","ready","fetchData","ssr","Promise","resolve","queryResult","lazy","handleErrorOrCompleted","setTimeout","resetQueryStoreErrors","treeRenderingInitiated","renderPromises","ssrDisabled","fetchDisabled","disableNetworkFetches","ssrLoading","addQueryPromise","prepareObservableQueryOptions","displayName","metadata","reactComponent","initializeObservableQuery","getSSRObservable","observableQueryOptions","children","watchQuery","registerSSRObservable","newObservableQueryOptions","onNewData","subscription","obsQuery","subscribe","next","resubscribeToQuery","hasOwnProperty","lastError","getLastError","lastResult","resetLastResults","unsubscribe","useBaseQuery","useReducer","tick","queryDataRef","queryData","memoFn","key","useDeepMemo"],"mappings":"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","file":"static/js/28.791ab54d.chunk.js","sourcesContent":["import { invariant } from 'ts-invariant';\nexport var DocumentType;\n(function (DocumentType) {\n    DocumentType[DocumentType[\"Query\"] = 0] = \"Query\";\n    DocumentType[DocumentType[\"Mutation\"] = 1] = \"Mutation\";\n    DocumentType[DocumentType[\"Subscription\"] = 2] = \"Subscription\";\n})(DocumentType || (DocumentType = {}));\nvar cache = new Map();\nexport function operationName(type) {\n    var name;\n    switch (type) {\n        case DocumentType.Query:\n            name = 'Query';\n            break;\n        case DocumentType.Mutation:\n            name = 'Mutation';\n            break;\n        case DocumentType.Subscription:\n            name = 'Subscription';\n            break;\n    }\n    return name;\n}\nexport function parser(document) {\n    var cached = cache.get(document);\n    if (cached)\n        return cached;\n    var variables, type, name;\n    invariant(!!document && !!document.kind, \"Argument of \" + document + \" passed to parser was not a valid GraphQL \" +\n        \"DocumentNode. You may need to use 'graphql-tag' or another method \" +\n        \"to convert your operation into a document\");\n    var fragments = document.definitions.filter(function (x) { return x.kind === 'FragmentDefinition'; });\n    var queries = document.definitions.filter(function (x) {\n        return x.kind === 'OperationDefinition' && x.operation === 'query';\n    });\n    var mutations = document.definitions.filter(function (x) {\n        return x.kind === 'OperationDefinition' && x.operation === 'mutation';\n    });\n    var subscriptions = document.definitions.filter(function (x) {\n        return x.kind === 'OperationDefinition' && x.operation === 'subscription';\n    });\n    invariant(!fragments.length ||\n        (queries.length || mutations.length || subscriptions.length), \"Passing only a fragment to 'graphql' is not yet supported. \" +\n        \"You must include a query, subscription or mutation as well\");\n    invariant(queries.length + mutations.length + subscriptions.length <= 1, \"react-apollo only supports a query, subscription, or a mutation per HOC. \" +\n        (document + \" had \" + queries.length + \" queries, \" + subscriptions.length + \" \") +\n        (\"subscriptions and \" + mutations.length + \" mutations. \") +\n        \"You can use 'compose' to join multiple operation types to a component\");\n    type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n    if (!queries.length && !mutations.length)\n        type = DocumentType.Subscription;\n    var definitions = queries.length\n        ? queries\n        : mutations.length\n            ? mutations\n            : subscriptions;\n    invariant(definitions.length === 1, \"react-apollo only supports one definition per HOC. \" + document + \" had \" +\n        (definitions.length + \" definitions. \") +\n        \"You can use 'compose' to join multiple operation types to a component\");\n    var definition = definitions[0];\n    variables = definition.variableDefinitions || [];\n    if (definition.name && definition.name.kind === 'Name') {\n        name = definition.name.value;\n    }\n    else {\n        name = 'data';\n    }\n    var payload = { name: name, type: type, variables: variables };\n    cache.set(document, payload);\n    return payload;\n}\n//# sourceMappingURL=parser.js.map","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\n\nfunction getRelativeValue(value, min, max) {\n  return (Math.min(Math.max(min, value), max) - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1); // https://gist.github.com/gre/1650294\n\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n    '@keyframes circular-rotate': {\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = \"\".concat((easeIn((100 - value) / 100) * circumference).toFixed(3), \"px\");\n      rootStyle.transform = \"rotate(\".concat((easeOut(value / 70) * 270).toFixed(3), \"deg)\");\n    }\n  }\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, {}, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'inherit']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: you have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'static'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import { useBaseQuery } from './utils/useBaseQuery';\nexport function useQuery(query, options) {\n    return useBaseQuery(query, options, false);\n}\n//# sourceMappingURL=useQuery.js.map","import { useBaseQuery } from './utils/useBaseQuery';\nexport function useLazyQuery(query, options) {\n    return useBaseQuery(query, options, true);\n}\n//# sourceMappingURL=useLazyQuery.js.map","import { __assign, __extends } from \"tslib\";\nimport { equal } from '@wry/equality';\nimport { DocumentType } from '../parser/parser';\nimport { ApolloError } from '../../errors/ApolloError';\nimport { OperationData } from './OperationData';\nvar MutationData = (function (_super) {\n    __extends(MutationData, _super);\n    function MutationData(_a) {\n        var options = _a.options, context = _a.context, result = _a.result, setResult = _a.setResult;\n        var _this = _super.call(this, options, context) || this;\n        _this.runMutation = function (mutationFunctionOptions) {\n            if (mutationFunctionOptions === void 0) { mutationFunctionOptions = {}; }\n            _this.onMutationStart();\n            var mutationId = _this.generateNewMutationId();\n            return _this.mutate(mutationFunctionOptions)\n                .then(function (response) {\n                _this.onMutationCompleted(response, mutationId);\n                return response;\n            })\n                .catch(function (error) {\n                _this.onMutationError(error, mutationId);\n                if (!_this.getOptions().onError)\n                    throw error;\n            });\n        };\n        _this.verifyDocumentType(options.mutation, DocumentType.Mutation);\n        _this.result = result;\n        _this.setResult = setResult;\n        _this.mostRecentMutationId = 0;\n        return _this;\n    }\n    MutationData.prototype.execute = function (result) {\n        this.isMounted = true;\n        this.verifyDocumentType(this.getOptions().mutation, DocumentType.Mutation);\n        return [\n            this.runMutation,\n            __assign(__assign({}, result), { client: this.refreshClient().client })\n        ];\n    };\n    MutationData.prototype.afterExecute = function () {\n        this.isMounted = true;\n        return this.unmount.bind(this);\n    };\n    MutationData.prototype.cleanup = function () {\n    };\n    MutationData.prototype.mutate = function (mutationFunctionOptions) {\n        var _a = this.getOptions(), mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, update = _a.update, _b = _a.context, mutationContext = _b === void 0 ? {} : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, fetchPolicy = _a.fetchPolicy;\n        var mutateOptions = __assign({}, mutationFunctionOptions);\n        var mutateVariables = Object.assign({}, variables, mutateOptions.variables);\n        delete mutateOptions.variables;\n        return this.refreshClient().client.mutate(__assign({ mutation: mutation,\n            optimisticResponse: optimisticResponse, refetchQueries: mutateOptions.refetchQueries || this.getOptions().refetchQueries, awaitRefetchQueries: awaitRefetchQueries,\n            update: update, context: mutationContext, fetchPolicy: fetchPolicy, variables: mutateVariables }, mutateOptions));\n    };\n    MutationData.prototype.onMutationStart = function () {\n        if (!this.result.loading && !this.getOptions().ignoreResults) {\n            this.updateResult({\n                loading: true,\n                error: undefined,\n                data: undefined,\n                called: true\n            });\n        }\n    };\n    MutationData.prototype.onMutationCompleted = function (response, mutationId) {\n        var _a = this.getOptions(), onCompleted = _a.onCompleted, ignoreResults = _a.ignoreResults;\n        var data = response.data, errors = response.errors;\n        var error = errors && errors.length > 0\n            ? new ApolloError({ graphQLErrors: errors })\n            : undefined;\n        var callOncomplete = function () {\n            return onCompleted ? onCompleted(data) : null;\n        };\n        if (this.isMostRecentMutation(mutationId) && !ignoreResults) {\n            this.updateResult({\n                called: true,\n                loading: false,\n                data: data,\n                error: error\n            });\n        }\n        callOncomplete();\n    };\n    MutationData.prototype.onMutationError = function (error, mutationId) {\n        var onError = this.getOptions().onError;\n        if (this.isMostRecentMutation(mutationId)) {\n            this.updateResult({\n                loading: false,\n                error: error,\n                data: undefined,\n                called: true\n            });\n        }\n        if (onError) {\n            onError(error);\n        }\n    };\n    MutationData.prototype.generateNewMutationId = function () {\n        return ++this.mostRecentMutationId;\n    };\n    MutationData.prototype.isMostRecentMutation = function (mutationId) {\n        return this.mostRecentMutationId === mutationId;\n    };\n    MutationData.prototype.updateResult = function (result) {\n        if (this.isMounted &&\n            (!this.previousResult || !equal(this.previousResult, result))) {\n            this.setResult(result);\n            this.previousResult = result;\n        }\n    };\n    return MutationData;\n}(OperationData));\nexport { MutationData };\n//# sourceMappingURL=MutationData.js.map","import { __assign } from \"tslib\";\nimport { MutationData } from '../data/MutationData';\nimport { getApolloContext } from '../context/ApolloContext';\nimport { requireReactLazily } from '../react';\nexport function useMutation(mutation, options) {\n    var _a = requireReactLazily(), useContext = _a.useContext, useState = _a.useState, useRef = _a.useRef, useEffect = _a.useEffect;\n    var context = useContext(getApolloContext());\n    var _b = useState({ called: false, loading: false }), result = _b[0], setResult = _b[1];\n    var updatedOptions = options ? __assign(__assign({}, options), { mutation: mutation }) : { mutation: mutation };\n    var mutationDataRef = useRef();\n    function getMutationDataRef() {\n        if (!mutationDataRef.current) {\n            mutationDataRef.current = new MutationData({\n                options: updatedOptions,\n                context: context,\n                result: result,\n                setResult: setResult\n            });\n        }\n        return mutationDataRef.current;\n    }\n    var mutationData = getMutationDataRef();\n    mutationData.setOptions(updatedOptions);\n    mutationData.context = context;\n    useEffect(function () { return mutationData.afterExecute(); });\n    return mutationData.execute(result);\n}\n//# sourceMappingURL=useMutation.js.map","import { equal } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\nimport { parser, operationName } from '../parser/parser';\nvar OperationData = (function () {\n    function OperationData(options, context) {\n        this.isMounted = false;\n        this.previousOptions = {};\n        this.context = {};\n        this.options = {};\n        this.options = options || {};\n        this.context = context || {};\n    }\n    OperationData.prototype.getOptions = function () {\n        return this.options;\n    };\n    OperationData.prototype.setOptions = function (newOptions, storePrevious) {\n        if (storePrevious === void 0) { storePrevious = false; }\n        if (storePrevious && !equal(this.options, newOptions)) {\n            this.previousOptions = this.options;\n        }\n        this.options = newOptions;\n    };\n    OperationData.prototype.unmount = function () {\n        this.isMounted = false;\n    };\n    OperationData.prototype.refreshClient = function () {\n        var client = (this.options && this.options.client) ||\n            (this.context && this.context.client);\n        invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' +\n            'Wrap the root component in an <ApolloProvider>, or pass an ' +\n            'ApolloClient instance in via options.');\n        var isNew = false;\n        if (client !== this.client) {\n            isNew = true;\n            this.client = client;\n            this.cleanup();\n        }\n        return {\n            client: this.client,\n            isNew: isNew\n        };\n    };\n    OperationData.prototype.verifyDocumentType = function (document, type) {\n        var operation = parser(document);\n        var requiredOperationName = operationName(type);\n        var usedOperationName = operationName(operation.type);\n        invariant(operation.type === type, \"Running a \" + requiredOperationName + \" requires a graphql \" +\n            (requiredOperationName + \", but a \" + usedOperationName + \" was used instead.\"));\n    };\n    return OperationData;\n}());\nexport { OperationData };\n//# sourceMappingURL=OperationData.js.map","import { __assign, __extends } from \"tslib\";\nimport { equal } from '@wry/equality';\nimport { ApolloError } from '../../errors/ApolloError';\nimport { NetworkStatus } from '../../core/networkStatus';\nimport { DocumentType } from '../parser/parser';\nimport { OperationData } from './OperationData';\nvar QueryData = (function (_super) {\n    __extends(QueryData, _super);\n    function QueryData(_a) {\n        var options = _a.options, context = _a.context, forceUpdate = _a.forceUpdate;\n        var _this = _super.call(this, options, context) || this;\n        _this.previousData = {};\n        _this.currentObservable = {};\n        _this.runLazy = false;\n        _this.runLazyQuery = function (options) {\n            _this.cleanup();\n            _this.runLazy = true;\n            _this.lazyOptions = options;\n            _this.forceUpdate();\n        };\n        _this.getQueryResult = function () {\n            var result = _this.observableQueryFields();\n            var options = _this.getOptions();\n            if (options.skip) {\n                result = __assign(__assign({}, result), { data: undefined, error: undefined, loading: false, called: true });\n            }\n            else {\n                var currentResult = _this.currentObservable.query.getCurrentResult();\n                var loading = currentResult.loading, partial = currentResult.partial, networkStatus = currentResult.networkStatus, errors = currentResult.errors;\n                var error = currentResult.error, data = currentResult.data;\n                if (errors && errors.length > 0) {\n                    error = new ApolloError({ graphQLErrors: errors });\n                }\n                result = __assign(__assign({}, result), { loading: loading,\n                    networkStatus: networkStatus,\n                    error: error, called: true });\n                if (loading) {\n                    var previousData = _this.previousData.result && _this.previousData.result.data;\n                    result.data =\n                        previousData && data\n                            ? __assign(__assign({}, previousData), data) : previousData || data;\n                }\n                else if (error) {\n                    Object.assign(result, {\n                        data: (_this.currentObservable.query.getLastResult() || {})\n                            .data\n                    });\n                }\n                else {\n                    var fetchPolicy = _this.currentObservable.query.options.fetchPolicy;\n                    var partialRefetch = options.partialRefetch;\n                    if (partialRefetch &&\n                        partial &&\n                        (!data || Object.keys(data).length === 0) &&\n                        fetchPolicy !== 'cache-only') {\n                        Object.assign(result, {\n                            loading: true,\n                            networkStatus: NetworkStatus.loading\n                        });\n                        result.refetch();\n                        return result;\n                    }\n                    result.data = data;\n                }\n            }\n            result.client = _this.client;\n            _this.setOptions(options, true);\n            _this.previousData.loading =\n                _this.previousData.result && _this.previousData.result.loading || false;\n            return _this.previousData.result = result;\n        };\n        _this.obsRefetch = function (variables) {\n            return _this.currentObservable.query.refetch(variables);\n        };\n        _this.obsFetchMore = function (fetchMoreOptions) { return _this.currentObservable.query.fetchMore(fetchMoreOptions); };\n        _this.obsUpdateQuery = function (mapFn) { return _this.currentObservable.query.updateQuery(mapFn); };\n        _this.obsStartPolling = function (pollInterval) {\n            _this.currentObservable &&\n                _this.currentObservable.query &&\n                _this.currentObservable.query.startPolling(pollInterval);\n        };\n        _this.obsStopPolling = function () {\n            _this.currentObservable &&\n                _this.currentObservable.query &&\n                _this.currentObservable.query.stopPolling();\n        };\n        _this.obsSubscribeToMore = function (options) { return _this.currentObservable.query.subscribeToMore(options); };\n        _this.forceUpdate = forceUpdate;\n        return _this;\n    }\n    QueryData.prototype.execute = function () {\n        this.refreshClient();\n        var _a = this.getOptions(), skip = _a.skip, query = _a.query;\n        if (skip || query !== this.previousData.query) {\n            this.removeQuerySubscription();\n            this.previousData.query = query;\n        }\n        this.updateObservableQuery();\n        if (this.isMounted)\n            this.startQuerySubscription();\n        return this.getExecuteSsrResult() || this.getExecuteResult();\n    };\n    QueryData.prototype.executeLazy = function () {\n        return !this.runLazy\n            ? [\n                this.runLazyQuery,\n                {\n                    loading: false,\n                    networkStatus: NetworkStatus.ready,\n                    called: false,\n                    data: undefined\n                }\n            ]\n            : [this.runLazyQuery, this.execute()];\n    };\n    QueryData.prototype.fetchData = function () {\n        var _this = this;\n        var options = this.getOptions();\n        if (options.skip || options.ssr === false)\n            return false;\n        return new Promise(function (resolve) { return _this.startQuerySubscription(resolve); });\n    };\n    QueryData.prototype.afterExecute = function (_a) {\n        var _this = this;\n        var queryResult = _a.queryResult, _b = _a.lazy, lazy = _b === void 0 ? false : _b;\n        this.isMounted = true;\n        if (!lazy || this.runLazy) {\n            this.handleErrorOrCompleted(queryResult);\n            setTimeout(function () {\n                _this.currentObservable.query &&\n                    _this.currentObservable.query.resetQueryStoreErrors();\n            });\n        }\n        this.previousOptions = this.getOptions();\n        return this.unmount.bind(this);\n    };\n    QueryData.prototype.cleanup = function () {\n        this.removeQuerySubscription();\n        delete this.currentObservable.query;\n        delete this.previousData.result;\n    };\n    QueryData.prototype.getOptions = function () {\n        var options = _super.prototype.getOptions.call(this);\n        if (this.lazyOptions) {\n            options.variables = __assign(__assign({}, options.variables), this.lazyOptions.variables);\n            options.context = __assign(__assign({}, options.context), this.lazyOptions.context);\n        }\n        if (this.runLazy) {\n            delete options.skip;\n        }\n        return options;\n    };\n    QueryData.prototype.getExecuteResult = function () {\n        var result = this.getQueryResult();\n        this.startQuerySubscription();\n        return result;\n    };\n    ;\n    QueryData.prototype.getExecuteSsrResult = function () {\n        var treeRenderingInitiated = this.context && this.context.renderPromises;\n        var ssrDisabled = this.getOptions().ssr === false;\n        var fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n        var ssrLoading = {\n            loading: true,\n            networkStatus: NetworkStatus.loading,\n            called: true,\n            data: undefined\n        };\n        if (ssrDisabled && (treeRenderingInitiated || fetchDisabled)) {\n            return ssrLoading;\n        }\n        var result;\n        if (treeRenderingInitiated) {\n            result =\n                this.context.renderPromises.addQueryPromise(this, this.getQueryResult) || ssrLoading;\n        }\n        return result;\n    };\n    QueryData.prototype.prepareObservableQueryOptions = function () {\n        var options = this.getOptions();\n        this.verifyDocumentType(options.query, DocumentType.Query);\n        var displayName = options.displayName || 'Query';\n        if (this.context &&\n            this.context.renderPromises &&\n            (options.fetchPolicy === 'network-only' ||\n                options.fetchPolicy === 'cache-and-network')) {\n            options.fetchPolicy = 'cache-first';\n        }\n        return __assign(__assign({}, options), { displayName: displayName, context: options.context, metadata: { reactComponent: { displayName: displayName } } });\n    };\n    QueryData.prototype.initializeObservableQuery = function () {\n        if (this.context && this.context.renderPromises) {\n            this.currentObservable.query = this.context.renderPromises.getSSRObservable(this.getOptions());\n        }\n        if (!this.currentObservable.query) {\n            var observableQueryOptions = this.prepareObservableQueryOptions();\n            this.previousData.observableQueryOptions = __assign(__assign({}, observableQueryOptions), { children: null });\n            this.currentObservable.query = this.refreshClient().client.watchQuery(__assign({}, observableQueryOptions));\n            if (this.context && this.context.renderPromises) {\n                this.context.renderPromises.registerSSRObservable(this.currentObservable.query, observableQueryOptions);\n            }\n        }\n    };\n    QueryData.prototype.updateObservableQuery = function () {\n        if (!this.currentObservable.query) {\n            this.initializeObservableQuery();\n            return;\n        }\n        var newObservableQueryOptions = __assign(__assign({}, this.prepareObservableQueryOptions()), { children: null });\n        if (!equal(newObservableQueryOptions, this.previousData.observableQueryOptions)) {\n            this.previousData.observableQueryOptions = newObservableQueryOptions;\n            this.currentObservable\n                .query.setOptions(newObservableQueryOptions)\n                .catch(function () { });\n        }\n    };\n    QueryData.prototype.startQuerySubscription = function (onNewData) {\n        var _this = this;\n        if (onNewData === void 0) { onNewData = this.forceUpdate; }\n        if (this.currentObservable.subscription || this.getOptions().skip)\n            return;\n        var obsQuery = this.currentObservable.query;\n        this.currentObservable.subscription = obsQuery.subscribe({\n            next: function (_a) {\n                var loading = _a.loading, networkStatus = _a.networkStatus, data = _a.data;\n                var previousResult = _this.previousData.result;\n                if (previousResult &&\n                    previousResult.loading === loading &&\n                    previousResult.networkStatus === networkStatus &&\n                    equal(previousResult.data, data)) {\n                    return;\n                }\n                if (_this.previousOptions.skip) {\n                    return;\n                }\n                onNewData();\n            },\n            error: function (error) {\n                _this.resubscribeToQuery();\n                if (!error.hasOwnProperty('graphQLErrors'))\n                    throw error;\n                var previousResult = _this.previousData.result;\n                if ((previousResult && previousResult.loading) ||\n                    !equal(error, _this.previousData.error)) {\n                    _this.previousData.error = error;\n                    onNewData();\n                }\n            }\n        });\n    };\n    QueryData.prototype.resubscribeToQuery = function () {\n        this.removeQuerySubscription();\n        var lastError = this.currentObservable.query.getLastError();\n        var lastResult = this.currentObservable.query.getLastResult();\n        this.currentObservable.query.resetLastResults();\n        this.startQuerySubscription();\n        Object.assign(this.currentObservable.query, {\n            lastError: lastError,\n            lastResult: lastResult\n        });\n    };\n    QueryData.prototype.handleErrorOrCompleted = function (_a) {\n        var data = _a.data, loading = _a.loading, error = _a.error;\n        if (!loading) {\n            var _b = this.getOptions(), query = _b.query, variables = _b.variables, onCompleted = _b.onCompleted, onError = _b.onError;\n            if (this.previousOptions &&\n                !this.previousData.loading &&\n                equal(this.previousOptions.query, query) &&\n                equal(this.previousOptions.variables, variables)) {\n                return;\n            }\n            if (onCompleted && !error) {\n                onCompleted(data);\n            }\n            else if (onError && error) {\n                onError(error);\n            }\n        }\n    };\n    QueryData.prototype.removeQuerySubscription = function () {\n        if (this.currentObservable.subscription) {\n            this.currentObservable.subscription.unsubscribe();\n            delete this.currentObservable.subscription;\n        }\n    };\n    QueryData.prototype.observableQueryFields = function () {\n        var observable = this.currentObservable.query;\n        return {\n            variables: observable.variables,\n            refetch: this.obsRefetch,\n            fetchMore: this.obsFetchMore,\n            updateQuery: this.obsUpdateQuery,\n            startPolling: this.obsStartPolling,\n            stopPolling: this.obsStopPolling,\n            subscribeToMore: this.obsSubscribeToMore\n        };\n    };\n    return QueryData;\n}(OperationData));\nexport { QueryData };\n//# sourceMappingURL=QueryData.js.map","import { __assign } from \"tslib\";\nimport { QueryData } from '../../data/QueryData';\nimport { useDeepMemo } from './useDeepMemo';\nimport { getApolloContext } from '../../context/ApolloContext';\nimport { requireReactLazily } from '../../react';\nexport function useBaseQuery(query, options, lazy) {\n    if (lazy === void 0) { lazy = false; }\n    var React = requireReactLazily();\n    var useContext = React.useContext, useEffect = React.useEffect, useReducer = React.useReducer, useRef = React.useRef;\n    var context = useContext(getApolloContext());\n    var _a = useReducer(function (x) { return x + 1; }, 0), tick = _a[0], forceUpdate = _a[1];\n    var updatedOptions = options ? __assign(__assign({}, options), { query: query }) : { query: query };\n    var queryDataRef = useRef();\n    if (!queryDataRef.current) {\n        queryDataRef.current = new QueryData({\n            options: updatedOptions,\n            context: context,\n            forceUpdate: forceUpdate\n        });\n    }\n    var queryData = queryDataRef.current;\n    queryData.setOptions(updatedOptions);\n    queryData.context = context;\n    var memo = {\n        options: __assign(__assign({}, updatedOptions), { onError: undefined, onCompleted: undefined }),\n        context: context,\n        tick: tick\n    };\n    var result = useDeepMemo(function () { return (lazy ? queryData.executeLazy() : queryData.execute()); }, memo);\n    var queryResult = lazy\n        ? result[1]\n        : result;\n    useEffect(function () { return queryData.afterExecute({ queryResult: queryResult, lazy: lazy }); }, [\n        queryResult.loading,\n        queryResult.networkStatus,\n        queryResult.error,\n        queryResult.data\n    ]);\n    useEffect(function () {\n        return function () { return queryData.cleanup(); };\n    }, []);\n    return result;\n}\n//# sourceMappingURL=useBaseQuery.js.map","import { equal } from '@wry/equality';\nimport { requireReactLazily } from '../../react';\nexport function useDeepMemo(memoFn, key) {\n    var React = requireReactLazily();\n    var useRef = React.useRef;\n    var ref = useRef();\n    if (!ref.current || !equal(key, ref.current.key)) {\n        ref.current = { key: key, value: memoFn() };\n    }\n    return ref.current.value;\n}\n//# sourceMappingURL=useDeepMemo.js.map"],"sourceRoot":""}