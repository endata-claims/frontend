{"version":3,"sources":["pages/app/Claims/ClaimDetails/tabs/Report/Form/FileField.tsx","hooks/useUppy.tsx"],"names":["label","name","disabled","options","React","useState","uppy","setUppy","files","setFiles","errors","setErrors","useEffect","client","Uppy","use","s3","companionUrl","COMPANION_ENDPOINT","on","result","successful","failed","success","map","extension","url","uploadURL","size","fail","message","error","status","response","useUppy","meta","type","restrictions","maxFileSize","maxNumberOfFiles","minNumberOfFiles","autoProceed","useFormikContext","setFieldValue","isSubmitting","isDisabled","textValue","setTextValue","length","value","join","modalOpen","setModalOpen","handleOpen","TextField","fullWidth","variant","onClick","placeholder","InputProps","startAdornment","InputAdornment","position","IconButton","closeModalOnClickOutside","open","onRequestClose"],"mappings":"2RAce,sBAAqC,IAAlCA,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,SAAoB,ECRpC,SAACC,GAAkB,IAAD,EACPC,IAAMC,SAAc,MADb,mBACxBC,EADwB,KAClBC,EADkB,OAELH,IAAMC,SAAgB,IAFjB,mBAExBG,EAFwB,KAEjBC,EAFiB,OAGHL,IAAMC,SAAgB,IAHnB,mBAGxBK,EAHwB,KAGhBC,EAHgB,KAgC/B,OA3BAP,IAAMQ,WAAU,WACd,IAAMC,EAASC,IAAKX,GACjBY,IAAIC,IAAI,CACPC,aAAcC,MAElBX,EAAQM,KAEP,IAECP,GAAMA,EAAKa,GAAG,YAAY,SAACC,GAAiB,IACtCC,EAAuBD,EAAvBC,WAAYC,EAAWF,EAAXE,OACpB,GAAID,EAAY,CACd,IAAME,EAAUF,EAAWG,KAAI,kBAAqD,CAAEvB,KAAvD,EAAGA,KAA0DwB,UAA7D,EAASA,UAA+DC,IAAxE,EAAoBC,UAAyDC,KAA7E,EAAoCA,SACnEnB,EAAS,GAAD,mBACHD,GADG,YAEHe,KAGP,GAAID,EAAQ,CACV,IAAMO,EAAOP,EAAOE,KAAI,kBAAoD,CAAEM,QAAtD,EAAGC,MAA4DC,OAA/D,EAAmBC,SAAYD,WACvDrB,EAAU,GAAD,mBACJD,GADI,YAEJmB,SAKF,CACLvB,OAAME,QAAOE,UDvBSwB,CAAQ,CAC9BC,KAAM,CAAEC,KAAM,UACdC,aAAc,CACZC,YAAa,IACbC,iBAAkB,EAClBC,iBAAkB,GAGpBC,aAAa,IARPnC,EAFyC,EAEzCA,KAAME,EAFmC,EAEnCA,MAFmC,EAcTkC,cAAhCC,EAdyC,EAczCA,cAAeC,EAd0B,EAc1BA,aACjBC,EAAa3C,GAAY0C,EAfkB,EAiBfxC,IAAMC,SAAS,IAjBA,mBAiB1CyC,EAjB0C,KAiB/BC,EAjB+B,KAkBjD3C,IAAMQ,WAAU,WACd,GAAIJ,GAASA,EAAMwC,OAAQ,CACzBL,EAAc1C,EAAMO,GACpB,IAAMyC,EAAQzC,EAAMgB,KAAI,qBAAGvB,QAAiBiD,KAAK,MACjDH,EAAaE,MAEd,CAACzC,EAAOP,EAAM0C,IAxBgC,MA2BfvC,IAAMC,UAAS,GA3BA,mBA2B1C8C,EA3B0C,KA2B/BC,EA3B+B,KA4B3CC,EAAa,kBAAOR,GAAcO,GAAcR,IAGtD,OAAKtC,EAEH,oCACE,kBAACgD,EAAA,EAAD,CACEtD,MAAOA,EACPuD,WAAS,EACTC,QAAQ,WACRP,MAAOH,EACPW,QAASJ,EACTnD,SAAU2C,EACVa,YAAY,wBACZC,WAAY,CACVC,eACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACvB,kBAACC,EAAA,EAAD,CAAYN,QAASJ,EAAYnD,SAAU2C,GACzC,kBAAC,IAAD,WAMV,kBAAC,IAAD,CACEvC,KAAMA,EACN0D,0BAAwB,EACxBC,KAAMd,EACNe,eA3Bc,kBAAMd,GAAa,OAErB","file":"static/js/41.5d4b9101.chunk.js","sourcesContent":["import React from 'react'\n\nimport { useFormikContext } from 'formik'\n\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport IconButton from '@material-ui/core/IconButton'\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload'\n\nimport useUppy from 'hooks/useUppy'\nimport DashboardModal from '@uppy/react/lib/DashboardModal'\nimport '@uppy/core/dist/style.css'\nimport '@uppy/dashboard/dist/style.css'\n\nexport default ({ label, name, disabled }: any) => {\n  // uppy hook\n  const { uppy, files } = useUppy({\n    meta: { type: 'avatar' },\n    restrictions: {\n      maxFileSize: 1000000,\n      maxNumberOfFiles: 3,\n      minNumberOfFiles: 1,\n      // allowedFileTypes: ['image/*', 'video/*']\n    },\n    autoProceed: false\n  })\n\n  // formik handle file upload hook\n  const { setFieldValue, isSubmitting } = useFormikContext()\n  const isDisabled = disabled || isSubmitting\n\n  const [textValue, setTextValue] = React.useState('')\n  React.useEffect(() => {\n    if (files && files.length) {\n      setFieldValue(name, files)\n      const value = files.map(({ name }) => name).join(', ')\n      setTextValue(value)\n    }\n  }, [files, name, setFieldValue])\n\n  // upload modal hooks\n  const [modalOpen, setModalOpen] = React.useState(false)\n  const handleOpen = () => !isDisabled && setModalOpen(!isSubmitting)\n  const handleClose = () => setModalOpen(false)\n\n  if (!uppy) return null\n  return (\n    <>\n      <TextField\n        label={label}\n        fullWidth\n        variant='outlined'\n        value={textValue}\n        onClick={handleOpen}\n        disabled={isDisabled}\n        placeholder='Click to upload files'\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position='start'>\n              <IconButton onClick={handleOpen} disabled={isDisabled}>\n                <CloudUploadIcon />\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n      <DashboardModal\n        uppy={uppy}\n        closeModalOnClickOutside\n        open={modalOpen}\n        onRequestClose={handleClose}\n      />\n    </>\n  )\n}","import React from 'react'\nimport Uppy from '@uppy/core'\nimport s3 from '@uppy/aws-s3'\n\nimport { COMPANION_ENDPOINT } from 'configs'\n\nexport default (options: any) => {\n  const [uppy, setUppy] = React.useState<any>(null)\n  const [files, setFiles] = React.useState<any[]>([])\n  const [errors, setErrors] = React.useState<any[]>([])\n\n  React.useEffect(() => {\n    const client = Uppy(options)\n      .use(s3, {\n        companionUrl: COMPANION_ENDPOINT\n      })\n    setUppy(client)\n    // eslint-disable-next-line\n  }, [])\n\n  if (uppy) uppy.on('complete', (result: any) => {\n    const { successful, failed } = result\n    if (successful) {\n      const success = successful.map(({ name, extension, uploadURL: url, size }: any) => ({ name, extension, url, size }))\n      setFiles([\n        ...files,\n        ...success\n      ])\n    }\n    if (failed) {\n      const fail = failed.map(({ error: message, response: { status } }: any) => ({ message, status }))\n      setErrors([\n        ...errors,\n        ...fail\n      ])\n    }\n  })\n\n  return {\n    uppy, files, errors\n  }\n}"],"sourceRoot":""}